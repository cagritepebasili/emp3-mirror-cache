/**
 * @fileoverview
 * @enhanceable
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!


goog.provide('proto.cmapi.AltitudeMode');
goog.provide('proto.cmapi.CacheInfo');
goog.provide('proto.cmapi.ChannelCacheCommand');
goog.provide('proto.cmapi.ChannelCloseCommand');
goog.provide('proto.cmapi.ChannelGroupAddChannelCommand');
goog.provide('proto.cmapi.ChannelGroupCacheCommand');
goog.provide('proto.cmapi.ChannelGroupHistoryCommand');
goog.provide('proto.cmapi.ChannelGroupInfo');
goog.provide('proto.cmapi.ChannelGroupJoinCommand');
goog.provide('proto.cmapi.ChannelGroupLeaveCommand');
goog.provide('proto.cmapi.ChannelGroupPublishCommand');
goog.provide('proto.cmapi.ChannelGroupRemoveChannelCommand');
goog.provide('proto.cmapi.ChannelHistoryCommand');
goog.provide('proto.cmapi.ChannelInfo');
goog.provide('proto.cmapi.ChannelOpenCommand');
goog.provide('proto.cmapi.ChannelPublishCommand');
goog.provide('proto.cmapi.Circle');
goog.provide('proto.cmapi.Container');
goog.provide('proto.cmapi.CreateChannelCommand');
goog.provide('proto.cmapi.CreateChannelGroupCommand');
goog.provide('proto.cmapi.DeleteChannelCommand');
goog.provide('proto.cmapi.DeleteChannelGroupCommand');
goog.provide('proto.cmapi.EntityInfo');
goog.provide('proto.cmapi.FillPattern');
goog.provide('proto.cmapi.FindChannelGroupsCommand');
goog.provide('proto.cmapi.FindChannelsCommand');
goog.provide('proto.cmapi.GeoColor');
goog.provide('proto.cmapi.GeoFillStyle');
goog.provide('proto.cmapi.GeoLabelStyle');
goog.provide('proto.cmapi.GeoPosition');
goog.provide('proto.cmapi.GeoRenderable');
goog.provide('proto.cmapi.GeoStrokeStyle');
goog.provide('proto.cmapi.GeoTimeSpan');
goog.provide('proto.cmapi.HistoryInfo');
goog.provide('proto.cmapi.Justification');
goog.provide('proto.cmapi.LogEntry');
goog.provide('proto.cmapi.MemberInfo');
goog.provide('proto.cmapi.MilStdSymbol');
goog.provide('proto.cmapi.Modifier');
goog.provide('proto.cmapi.OneOfCommand');
goog.provide('proto.cmapi.OneOfFeature');
goog.provide('proto.cmapi.ProtoMessage');
goog.provide('proto.cmapi.ProtoPayload');
goog.provide('proto.cmapi.QueueInfo');
goog.provide('proto.cmapi.Status');
goog.provide('proto.cmapi.SymbolStandard');
goog.provide('proto.cmapi.Typeface');

goog.require('jspb.Message');
goog.require('jspb.BinaryReader');
goog.require('jspb.BinaryWriter');
goog.require('proto.google.protobuf.Timestamp');


/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cmapi.GeoPosition = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cmapi.GeoPosition, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.cmapi.GeoPosition.displayName = 'proto.cmapi.GeoPosition';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cmapi.GeoPosition.prototype.toObject = function(opt_includeInstance) {
  return proto.cmapi.GeoPosition.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cmapi.GeoPosition} msg The msg instance to transform.
 * @return {!Object}
 */
proto.cmapi.GeoPosition.toObject = function(includeInstance, msg) {
  var f, obj = {
    latitude: +jspb.Message.getFieldWithDefault(msg, 1, 0.0),
    longitude: +jspb.Message.getFieldWithDefault(msg, 2, 0.0),
    altitude: +jspb.Message.getFieldWithDefault(msg, 3, 0.0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cmapi.GeoPosition}
 */
proto.cmapi.GeoPosition.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cmapi.GeoPosition;
  return proto.cmapi.GeoPosition.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cmapi.GeoPosition} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cmapi.GeoPosition}
 */
proto.cmapi.GeoPosition.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setLatitude(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setLongitude(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setAltitude(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.cmapi.GeoPosition} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.cmapi.GeoPosition.serializeBinaryToWriter = function(message, writer) {
  message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cmapi.GeoPosition.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  this.serializeBinaryToWriter(writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.cmapi.GeoPosition.prototype.serializeBinaryToWriter = function (writer) {
  var f = undefined;
  f = this.getLatitude();
  if (f !== 0.0) {
    writer.writeDouble(
      1,
      f
    );
  }
  f = this.getLongitude();
  if (f !== 0.0) {
    writer.writeDouble(
      2,
      f
    );
  }
  f = this.getAltitude();
  if (f !== 0.0) {
    writer.writeDouble(
      3,
      f
    );
  }
};


/**
 * optional double latitude = 1;
 * @return {number}
 */
proto.cmapi.GeoPosition.prototype.getLatitude = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 1, 0.0));
};


/** @param {number} value */
proto.cmapi.GeoPosition.prototype.setLatitude = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * optional double longitude = 2;
 * @return {number}
 */
proto.cmapi.GeoPosition.prototype.getLongitude = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 2, 0.0));
};


/** @param {number} value */
proto.cmapi.GeoPosition.prototype.setLongitude = function(value) {
  jspb.Message.setField(this, 2, value);
};


/**
 * optional double altitude = 3;
 * @return {number}
 */
proto.cmapi.GeoPosition.prototype.getAltitude = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 3, 0.0));
};


/** @param {number} value */
proto.cmapi.GeoPosition.prototype.setAltitude = function(value) {
  jspb.Message.setField(this, 3, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cmapi.GeoColor = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cmapi.GeoColor, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.cmapi.GeoColor.displayName = 'proto.cmapi.GeoColor';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cmapi.GeoColor.prototype.toObject = function(opt_includeInstance) {
  return proto.cmapi.GeoColor.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cmapi.GeoColor} msg The msg instance to transform.
 * @return {!Object}
 */
proto.cmapi.GeoColor.toObject = function(includeInstance, msg) {
  var f, obj = {
    red: jspb.Message.getFieldWithDefault(msg, 1, 0),
    green: jspb.Message.getFieldWithDefault(msg, 2, 0),
    blue: jspb.Message.getFieldWithDefault(msg, 3, 0),
    alpha: +jspb.Message.getFieldWithDefault(msg, 4, 0.0),
    customUserData1Map: (f = msg.getCustomUserData1Map()) ? f.toArray() : [],
    customUserData2Map: (f = msg.getCustomUserData2Map()) ? f.toArray() : []
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cmapi.GeoColor}
 */
proto.cmapi.GeoColor.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cmapi.GeoColor;
  return proto.cmapi.GeoColor.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cmapi.GeoColor} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cmapi.GeoColor}
 */
proto.cmapi.GeoColor.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setRed(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setGreen(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setBlue(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setAlpha(value);
      break;
    case 5:
      var value = msg.getCustomUserData1Map();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readString);
         });
      break;
    case 6:
      var value = msg.getCustomUserData2Map();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readBytes);
         });
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.cmapi.GeoColor} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.cmapi.GeoColor.serializeBinaryToWriter = function(message, writer) {
  message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cmapi.GeoColor.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  this.serializeBinaryToWriter(writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.cmapi.GeoColor.prototype.serializeBinaryToWriter = function (writer) {
  var f = undefined;
  f = this.getRed();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = this.getGreen();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = this.getBlue();
  if (f !== 0) {
    writer.writeInt32(
      3,
      f
    );
  }
  f = this.getAlpha();
  if (f !== 0.0) {
    writer.writeDouble(
      4,
      f
    );
  }
  f = this.getCustomUserData1Map(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(5, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeString);
  }
  f = this.getCustomUserData2Map(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(6, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeBytes);
  }
};


/**
 * optional int32 red = 1;
 * @return {number}
 */
proto.cmapi.GeoColor.prototype.getRed = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.cmapi.GeoColor.prototype.setRed = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * optional int32 green = 2;
 * @return {number}
 */
proto.cmapi.GeoColor.prototype.getGreen = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {number} value */
proto.cmapi.GeoColor.prototype.setGreen = function(value) {
  jspb.Message.setField(this, 2, value);
};


/**
 * optional int32 blue = 3;
 * @return {number}
 */
proto.cmapi.GeoColor.prototype.getBlue = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/** @param {number} value */
proto.cmapi.GeoColor.prototype.setBlue = function(value) {
  jspb.Message.setField(this, 3, value);
};


/**
 * optional double alpha = 4;
 * @return {number}
 */
proto.cmapi.GeoColor.prototype.getAlpha = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 4, 0.0));
};


/** @param {number} value */
proto.cmapi.GeoColor.prototype.setAlpha = function(value) {
  jspb.Message.setField(this, 4, value);
};


/**
 * map<string, string> _custom_user_data_1 = 5;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,string>}
 */
proto.cmapi.GeoColor.prototype.getCustomUserData1Map = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,string>} */ (
      jspb.Message.getMapField(this, 5, opt_noLazyCreate,
      null));
};


proto.cmapi.GeoColor.prototype.clearCustomUserData1Map = function() {
  this.getCustomUserData1Map().clear();
};


/**
 * map<string, bytes> _custom_user_data_2 = 6;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,!(string|Uint8Array)>}
 */
proto.cmapi.GeoColor.prototype.getCustomUserData2Map = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,!(string|Uint8Array)>} */ (
      jspb.Message.getMapField(this, 6, opt_noLazyCreate,
      null));
};


proto.cmapi.GeoColor.prototype.clearCustomUserData2Map = function() {
  this.getCustomUserData2Map().clear();
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cmapi.GeoFillStyle = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cmapi.GeoFillStyle, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.cmapi.GeoFillStyle.displayName = 'proto.cmapi.GeoFillStyle';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cmapi.GeoFillStyle.prototype.toObject = function(opt_includeInstance) {
  return proto.cmapi.GeoFillStyle.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cmapi.GeoFillStyle} msg The msg instance to transform.
 * @return {!Object}
 */
proto.cmapi.GeoFillStyle.toObject = function(includeInstance, msg) {
  var f, obj = {
    fillColor: (f = msg.getFillColor()) && proto.cmapi.GeoColor.toObject(includeInstance, f),
    fillPattern: jspb.Message.getFieldWithDefault(msg, 2, 0),
    description: jspb.Message.getFieldWithDefault(msg, 3, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cmapi.GeoFillStyle}
 */
proto.cmapi.GeoFillStyle.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cmapi.GeoFillStyle;
  return proto.cmapi.GeoFillStyle.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cmapi.GeoFillStyle} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cmapi.GeoFillStyle}
 */
proto.cmapi.GeoFillStyle.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.cmapi.GeoColor;
      reader.readMessage(value,proto.cmapi.GeoColor.deserializeBinaryFromReader);
      msg.setFillColor(value);
      break;
    case 2:
      var value = /** @type {!proto.cmapi.FillPattern} */ (reader.readEnum());
      msg.setFillPattern(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setDescription(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.cmapi.GeoFillStyle} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.cmapi.GeoFillStyle.serializeBinaryToWriter = function(message, writer) {
  message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cmapi.GeoFillStyle.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  this.serializeBinaryToWriter(writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.cmapi.GeoFillStyle.prototype.serializeBinaryToWriter = function (writer) {
  var f = undefined;
  f = this.getFillColor();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.cmapi.GeoColor.serializeBinaryToWriter
    );
  }
  f = this.getFillPattern();
  if (f !== 0.0) {
    writer.writeEnum(
      2,
      f
    );
  }
  f = this.getDescription();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * optional GeoColor fill_color = 1;
 * @return {?proto.cmapi.GeoColor}
 */
proto.cmapi.GeoFillStyle.prototype.getFillColor = function() {
  return /** @type{?proto.cmapi.GeoColor} */ (
    jspb.Message.getWrapperField(this, proto.cmapi.GeoColor, 1));
};


/** @param {?proto.cmapi.GeoColor|undefined} value */
proto.cmapi.GeoFillStyle.prototype.setFillColor = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.cmapi.GeoFillStyle.prototype.clearFillColor = function() {
  this.setFillColor(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.cmapi.GeoFillStyle.prototype.hasFillColor = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional FillPattern fill_pattern = 2;
 * @return {!proto.cmapi.FillPattern}
 */
proto.cmapi.GeoFillStyle.prototype.getFillPattern = function() {
  return /** @type {!proto.cmapi.FillPattern} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {!proto.cmapi.FillPattern} value */
proto.cmapi.GeoFillStyle.prototype.setFillPattern = function(value) {
  jspb.Message.setField(this, 2, value);
};


/**
 * optional string description = 3;
 * @return {string}
 */
proto.cmapi.GeoFillStyle.prototype.getDescription = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/** @param {string} value */
proto.cmapi.GeoFillStyle.prototype.setDescription = function(value) {
  jspb.Message.setField(this, 3, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cmapi.GeoStrokeStyle = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cmapi.GeoStrokeStyle, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.cmapi.GeoStrokeStyle.displayName = 'proto.cmapi.GeoStrokeStyle';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cmapi.GeoStrokeStyle.prototype.toObject = function(opt_includeInstance) {
  return proto.cmapi.GeoStrokeStyle.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cmapi.GeoStrokeStyle} msg The msg instance to transform.
 * @return {!Object}
 */
proto.cmapi.GeoStrokeStyle.toObject = function(includeInstance, msg) {
  var f, obj = {
    strokeColor: (f = msg.getStrokeColor()) && proto.cmapi.GeoColor.toObject(includeInstance, f),
    stipplingPattern: jspb.Message.getFieldWithDefault(msg, 2, 0),
    stipplingFactor: jspb.Message.getFieldWithDefault(msg, 3, 0),
    strokeWidth: +jspb.Message.getFieldWithDefault(msg, 4, 0.0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cmapi.GeoStrokeStyle}
 */
proto.cmapi.GeoStrokeStyle.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cmapi.GeoStrokeStyle;
  return proto.cmapi.GeoStrokeStyle.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cmapi.GeoStrokeStyle} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cmapi.GeoStrokeStyle}
 */
proto.cmapi.GeoStrokeStyle.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.cmapi.GeoColor;
      reader.readMessage(value,proto.cmapi.GeoColor.deserializeBinaryFromReader);
      msg.setStrokeColor(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setStipplingPattern(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setStipplingFactor(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setStrokeWidth(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.cmapi.GeoStrokeStyle} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.cmapi.GeoStrokeStyle.serializeBinaryToWriter = function(message, writer) {
  message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cmapi.GeoStrokeStyle.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  this.serializeBinaryToWriter(writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.cmapi.GeoStrokeStyle.prototype.serializeBinaryToWriter = function (writer) {
  var f = undefined;
  f = this.getStrokeColor();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.cmapi.GeoColor.serializeBinaryToWriter
    );
  }
  f = this.getStipplingPattern();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = this.getStipplingFactor();
  if (f !== 0) {
    writer.writeInt32(
      3,
      f
    );
  }
  f = this.getStrokeWidth();
  if (f !== 0.0) {
    writer.writeDouble(
      4,
      f
    );
  }
};


/**
 * optional GeoColor stroke_color = 1;
 * @return {?proto.cmapi.GeoColor}
 */
proto.cmapi.GeoStrokeStyle.prototype.getStrokeColor = function() {
  return /** @type{?proto.cmapi.GeoColor} */ (
    jspb.Message.getWrapperField(this, proto.cmapi.GeoColor, 1));
};


/** @param {?proto.cmapi.GeoColor|undefined} value */
proto.cmapi.GeoStrokeStyle.prototype.setStrokeColor = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.cmapi.GeoStrokeStyle.prototype.clearStrokeColor = function() {
  this.setStrokeColor(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.cmapi.GeoStrokeStyle.prototype.hasStrokeColor = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional int32 stippling_pattern = 2;
 * @return {number}
 */
proto.cmapi.GeoStrokeStyle.prototype.getStipplingPattern = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {number} value */
proto.cmapi.GeoStrokeStyle.prototype.setStipplingPattern = function(value) {
  jspb.Message.setField(this, 2, value);
};


/**
 * optional int32 stippling_factor = 3;
 * @return {number}
 */
proto.cmapi.GeoStrokeStyle.prototype.getStipplingFactor = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/** @param {number} value */
proto.cmapi.GeoStrokeStyle.prototype.setStipplingFactor = function(value) {
  jspb.Message.setField(this, 3, value);
};


/**
 * optional double stroke_width = 4;
 * @return {number}
 */
proto.cmapi.GeoStrokeStyle.prototype.getStrokeWidth = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 4, 0.0));
};


/** @param {number} value */
proto.cmapi.GeoStrokeStyle.prototype.setStrokeWidth = function(value) {
  jspb.Message.setField(this, 4, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cmapi.GeoLabelStyle = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cmapi.GeoLabelStyle, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.cmapi.GeoLabelStyle.displayName = 'proto.cmapi.GeoLabelStyle';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cmapi.GeoLabelStyle.prototype.toObject = function(opt_includeInstance) {
  return proto.cmapi.GeoLabelStyle.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cmapi.GeoLabelStyle} msg The msg instance to transform.
 * @return {!Object}
 */
proto.cmapi.GeoLabelStyle.toObject = function(includeInstance, msg) {
  var f, obj = {
    color: (f = msg.getColor()) && proto.cmapi.GeoColor.toObject(includeInstance, f),
    outlineColor: (f = msg.getOutlineColor()) && proto.cmapi.GeoColor.toObject(includeInstance, f),
    justification: jspb.Message.getFieldWithDefault(msg, 3, 0),
    fontFamily: jspb.Message.getFieldWithDefault(msg, 4, ""),
    typeface: jspb.Message.getFieldWithDefault(msg, 5, 0),
    size: +jspb.Message.getFieldWithDefault(msg, 6, 0.0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cmapi.GeoLabelStyle}
 */
proto.cmapi.GeoLabelStyle.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cmapi.GeoLabelStyle;
  return proto.cmapi.GeoLabelStyle.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cmapi.GeoLabelStyle} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cmapi.GeoLabelStyle}
 */
proto.cmapi.GeoLabelStyle.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.cmapi.GeoColor;
      reader.readMessage(value,proto.cmapi.GeoColor.deserializeBinaryFromReader);
      msg.setColor(value);
      break;
    case 2:
      var value = new proto.cmapi.GeoColor;
      reader.readMessage(value,proto.cmapi.GeoColor.deserializeBinaryFromReader);
      msg.setOutlineColor(value);
      break;
    case 3:
      var value = /** @type {!proto.cmapi.Justification} */ (reader.readEnum());
      msg.setJustification(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setFontFamily(value);
      break;
    case 5:
      var value = /** @type {!proto.cmapi.Typeface} */ (reader.readEnum());
      msg.setTypeface(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setSize(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.cmapi.GeoLabelStyle} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.cmapi.GeoLabelStyle.serializeBinaryToWriter = function(message, writer) {
  message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cmapi.GeoLabelStyle.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  this.serializeBinaryToWriter(writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.cmapi.GeoLabelStyle.prototype.serializeBinaryToWriter = function (writer) {
  var f = undefined;
  f = this.getColor();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.cmapi.GeoColor.serializeBinaryToWriter
    );
  }
  f = this.getOutlineColor();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.cmapi.GeoColor.serializeBinaryToWriter
    );
  }
  f = this.getJustification();
  if (f !== 0.0) {
    writer.writeEnum(
      3,
      f
    );
  }
  f = this.getFontFamily();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = this.getTypeface();
  if (f !== 0.0) {
    writer.writeEnum(
      5,
      f
    );
  }
  f = this.getSize();
  if (f !== 0.0) {
    writer.writeDouble(
      6,
      f
    );
  }
};


/**
 * optional GeoColor color = 1;
 * @return {?proto.cmapi.GeoColor}
 */
proto.cmapi.GeoLabelStyle.prototype.getColor = function() {
  return /** @type{?proto.cmapi.GeoColor} */ (
    jspb.Message.getWrapperField(this, proto.cmapi.GeoColor, 1));
};


/** @param {?proto.cmapi.GeoColor|undefined} value */
proto.cmapi.GeoLabelStyle.prototype.setColor = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.cmapi.GeoLabelStyle.prototype.clearColor = function() {
  this.setColor(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.cmapi.GeoLabelStyle.prototype.hasColor = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional GeoColor outline_color = 2;
 * @return {?proto.cmapi.GeoColor}
 */
proto.cmapi.GeoLabelStyle.prototype.getOutlineColor = function() {
  return /** @type{?proto.cmapi.GeoColor} */ (
    jspb.Message.getWrapperField(this, proto.cmapi.GeoColor, 2));
};


/** @param {?proto.cmapi.GeoColor|undefined} value */
proto.cmapi.GeoLabelStyle.prototype.setOutlineColor = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


proto.cmapi.GeoLabelStyle.prototype.clearOutlineColor = function() {
  this.setOutlineColor(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.cmapi.GeoLabelStyle.prototype.hasOutlineColor = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional Justification justification = 3;
 * @return {!proto.cmapi.Justification}
 */
proto.cmapi.GeoLabelStyle.prototype.getJustification = function() {
  return /** @type {!proto.cmapi.Justification} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/** @param {!proto.cmapi.Justification} value */
proto.cmapi.GeoLabelStyle.prototype.setJustification = function(value) {
  jspb.Message.setField(this, 3, value);
};


/**
 * optional string font_family = 4;
 * @return {string}
 */
proto.cmapi.GeoLabelStyle.prototype.getFontFamily = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/** @param {string} value */
proto.cmapi.GeoLabelStyle.prototype.setFontFamily = function(value) {
  jspb.Message.setField(this, 4, value);
};


/**
 * optional Typeface typeface = 5;
 * @return {!proto.cmapi.Typeface}
 */
proto.cmapi.GeoLabelStyle.prototype.getTypeface = function() {
  return /** @type {!proto.cmapi.Typeface} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/** @param {!proto.cmapi.Typeface} value */
proto.cmapi.GeoLabelStyle.prototype.setTypeface = function(value) {
  jspb.Message.setField(this, 5, value);
};


/**
 * optional double size = 6;
 * @return {number}
 */
proto.cmapi.GeoLabelStyle.prototype.getSize = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 6, 0.0));
};


/** @param {number} value */
proto.cmapi.GeoLabelStyle.prototype.setSize = function(value) {
  jspb.Message.setField(this, 6, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cmapi.GeoTimeSpan = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cmapi.GeoTimeSpan, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.cmapi.GeoTimeSpan.displayName = 'proto.cmapi.GeoTimeSpan';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cmapi.GeoTimeSpan.prototype.toObject = function(opt_includeInstance) {
  return proto.cmapi.GeoTimeSpan.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cmapi.GeoTimeSpan} msg The msg instance to transform.
 * @return {!Object}
 */
proto.cmapi.GeoTimeSpan.toObject = function(includeInstance, msg) {
  var f, obj = {
    begin: (f = msg.getBegin()) && proto.google.protobuf.Timestamp.toObject(includeInstance, f),
    end: (f = msg.getEnd()) && proto.google.protobuf.Timestamp.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cmapi.GeoTimeSpan}
 */
proto.cmapi.GeoTimeSpan.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cmapi.GeoTimeSpan;
  return proto.cmapi.GeoTimeSpan.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cmapi.GeoTimeSpan} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cmapi.GeoTimeSpan}
 */
proto.cmapi.GeoTimeSpan.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.google.protobuf.Timestamp;
      reader.readMessage(value,proto.google.protobuf.Timestamp.deserializeBinaryFromReader);
      msg.setBegin(value);
      break;
    case 2:
      var value = new proto.google.protobuf.Timestamp;
      reader.readMessage(value,proto.google.protobuf.Timestamp.deserializeBinaryFromReader);
      msg.setEnd(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.cmapi.GeoTimeSpan} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.cmapi.GeoTimeSpan.serializeBinaryToWriter = function(message, writer) {
  message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cmapi.GeoTimeSpan.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  this.serializeBinaryToWriter(writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.cmapi.GeoTimeSpan.prototype.serializeBinaryToWriter = function (writer) {
  var f = undefined;
  f = this.getBegin();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.google.protobuf.Timestamp.serializeBinaryToWriter
    );
  }
  f = this.getEnd();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.google.protobuf.Timestamp.serializeBinaryToWriter
    );
  }
};


/**
 * optional google.protobuf.Timestamp begin = 1;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.cmapi.GeoTimeSpan.prototype.getBegin = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, proto.google.protobuf.Timestamp, 1));
};


/** @param {?proto.google.protobuf.Timestamp|undefined} value */
proto.cmapi.GeoTimeSpan.prototype.setBegin = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.cmapi.GeoTimeSpan.prototype.clearBegin = function() {
  this.setBegin(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.cmapi.GeoTimeSpan.prototype.hasBegin = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional google.protobuf.Timestamp end = 2;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.cmapi.GeoTimeSpan.prototype.getEnd = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, proto.google.protobuf.Timestamp, 2));
};


/** @param {?proto.google.protobuf.Timestamp|undefined} value */
proto.cmapi.GeoTimeSpan.prototype.setEnd = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


proto.cmapi.GeoTimeSpan.prototype.clearEnd = function() {
  this.setEnd(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.cmapi.GeoTimeSpan.prototype.hasEnd = function() {
  return jspb.Message.getField(this, 2) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cmapi.GeoRenderable = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.cmapi.GeoRenderable.repeatedFields_, null);
};
goog.inherits(proto.cmapi.GeoRenderable, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.cmapi.GeoRenderable.displayName = 'proto.cmapi.GeoRenderable';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.cmapi.GeoRenderable.repeatedFields_ = [2,4];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cmapi.GeoRenderable.prototype.toObject = function(opt_includeInstance) {
  return proto.cmapi.GeoRenderable.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cmapi.GeoRenderable} msg The msg instance to transform.
 * @return {!Object}
 */
proto.cmapi.GeoRenderable.toObject = function(includeInstance, msg) {
  var f, obj = {
    altitudeMode: jspb.Message.getFieldWithDefault(msg, 1, 0),
    positionList: jspb.Message.toObjectList(msg.getPositionList(),
    proto.cmapi.GeoPosition.toObject, includeInstance),
    timeStamp: (f = msg.getTimeStamp()) && proto.google.protobuf.Timestamp.toObject(includeInstance, f),
    timeSpanList: jspb.Message.toObjectList(msg.getTimeSpanList(),
    proto.cmapi.GeoTimeSpan.toObject, includeInstance),
    labelStyle: (f = msg.getLabelStyle()) && proto.cmapi.GeoLabelStyle.toObject(includeInstance, f),
    strokeStyle: (f = msg.getStrokeStyle()) && proto.cmapi.GeoStrokeStyle.toObject(includeInstance, f),
    fillStyle: (f = msg.getFillStyle()) && proto.cmapi.GeoFillStyle.toObject(includeInstance, f),
    extrude: jspb.Message.getFieldWithDefault(msg, 8, false),
    tessellate: jspb.Message.getFieldWithDefault(msg, 9, false),
    buffer: +jspb.Message.getFieldWithDefault(msg, 10, 0.0),
    azimuth: +jspb.Message.getFieldWithDefault(msg, 11, 0.0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cmapi.GeoRenderable}
 */
proto.cmapi.GeoRenderable.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cmapi.GeoRenderable;
  return proto.cmapi.GeoRenderable.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cmapi.GeoRenderable} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cmapi.GeoRenderable}
 */
proto.cmapi.GeoRenderable.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.cmapi.AltitudeMode} */ (reader.readEnum());
      msg.setAltitudeMode(value);
      break;
    case 2:
      var value = new proto.cmapi.GeoPosition;
      reader.readMessage(value,proto.cmapi.GeoPosition.deserializeBinaryFromReader);
      msg.addPosition(value);
      break;
    case 3:
      var value = new proto.google.protobuf.Timestamp;
      reader.readMessage(value,proto.google.protobuf.Timestamp.deserializeBinaryFromReader);
      msg.setTimeStamp(value);
      break;
    case 4:
      var value = new proto.cmapi.GeoTimeSpan;
      reader.readMessage(value,proto.cmapi.GeoTimeSpan.deserializeBinaryFromReader);
      msg.addTimeSpan(value);
      break;
    case 5:
      var value = new proto.cmapi.GeoLabelStyle;
      reader.readMessage(value,proto.cmapi.GeoLabelStyle.deserializeBinaryFromReader);
      msg.setLabelStyle(value);
      break;
    case 6:
      var value = new proto.cmapi.GeoStrokeStyle;
      reader.readMessage(value,proto.cmapi.GeoStrokeStyle.deserializeBinaryFromReader);
      msg.setStrokeStyle(value);
      break;
    case 7:
      var value = new proto.cmapi.GeoFillStyle;
      reader.readMessage(value,proto.cmapi.GeoFillStyle.deserializeBinaryFromReader);
      msg.setFillStyle(value);
      break;
    case 8:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setExtrude(value);
      break;
    case 9:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setTessellate(value);
      break;
    case 10:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setBuffer(value);
      break;
    case 11:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setAzimuth(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.cmapi.GeoRenderable} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.cmapi.GeoRenderable.serializeBinaryToWriter = function(message, writer) {
  message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cmapi.GeoRenderable.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  this.serializeBinaryToWriter(writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.cmapi.GeoRenderable.prototype.serializeBinaryToWriter = function (writer) {
  var f = undefined;
  f = this.getAltitudeMode();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = this.getPositionList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.cmapi.GeoPosition.serializeBinaryToWriter
    );
  }
  f = this.getTimeStamp();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.google.protobuf.Timestamp.serializeBinaryToWriter
    );
  }
  f = this.getTimeSpanList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      4,
      f,
      proto.cmapi.GeoTimeSpan.serializeBinaryToWriter
    );
  }
  f = this.getLabelStyle();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      proto.cmapi.GeoLabelStyle.serializeBinaryToWriter
    );
  }
  f = this.getStrokeStyle();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      proto.cmapi.GeoStrokeStyle.serializeBinaryToWriter
    );
  }
  f = this.getFillStyle();
  if (f != null) {
    writer.writeMessage(
      7,
      f,
      proto.cmapi.GeoFillStyle.serializeBinaryToWriter
    );
  }
  f = this.getExtrude();
  if (f) {
    writer.writeBool(
      8,
      f
    );
  }
  f = this.getTessellate();
  if (f) {
    writer.writeBool(
      9,
      f
    );
  }
  f = this.getBuffer();
  if (f !== 0.0) {
    writer.writeDouble(
      10,
      f
    );
  }
  f = this.getAzimuth();
  if (f !== 0.0) {
    writer.writeDouble(
      11,
      f
    );
  }
};


/**
 * optional AltitudeMode altitude_mode = 1;
 * @return {!proto.cmapi.AltitudeMode}
 */
proto.cmapi.GeoRenderable.prototype.getAltitudeMode = function() {
  return /** @type {!proto.cmapi.AltitudeMode} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {!proto.cmapi.AltitudeMode} value */
proto.cmapi.GeoRenderable.prototype.setAltitudeMode = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * repeated GeoPosition position = 2;
 * If you change this array by adding, removing or replacing elements, or if you
 * replace the array itself, then you must call the setter to update it.
 * @return {!Array.<!proto.cmapi.GeoPosition>}
 */
proto.cmapi.GeoRenderable.prototype.getPositionList = function() {
  return /** @type{!Array.<!proto.cmapi.GeoPosition>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.cmapi.GeoPosition, 2));
};


/** @param {!Array.<!proto.cmapi.GeoPosition>} value */
proto.cmapi.GeoRenderable.prototype.setPositionList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.cmapi.GeoPosition=} opt_value
 * @param {number=} opt_index
 * @return {!proto.cmapi.GeoPosition}
 */
proto.cmapi.GeoRenderable.prototype.addPosition = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.cmapi.GeoPosition, opt_index);
};


proto.cmapi.GeoRenderable.prototype.clearPositionList = function() {
  this.setPositionList([]);
};


/**
 * optional google.protobuf.Timestamp time_stamp = 3;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.cmapi.GeoRenderable.prototype.getTimeStamp = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, proto.google.protobuf.Timestamp, 3));
};


/** @param {?proto.google.protobuf.Timestamp|undefined} value */
proto.cmapi.GeoRenderable.prototype.setTimeStamp = function(value) {
  jspb.Message.setWrapperField(this, 3, value);
};


proto.cmapi.GeoRenderable.prototype.clearTimeStamp = function() {
  this.setTimeStamp(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.cmapi.GeoRenderable.prototype.hasTimeStamp = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * repeated GeoTimeSpan time_span = 4;
 * If you change this array by adding, removing or replacing elements, or if you
 * replace the array itself, then you must call the setter to update it.
 * @return {!Array.<!proto.cmapi.GeoTimeSpan>}
 */
proto.cmapi.GeoRenderable.prototype.getTimeSpanList = function() {
  return /** @type{!Array.<!proto.cmapi.GeoTimeSpan>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.cmapi.GeoTimeSpan, 4));
};


/** @param {!Array.<!proto.cmapi.GeoTimeSpan>} value */
proto.cmapi.GeoRenderable.prototype.setTimeSpanList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 4, value);
};


/**
 * @param {!proto.cmapi.GeoTimeSpan=} opt_value
 * @param {number=} opt_index
 * @return {!proto.cmapi.GeoTimeSpan}
 */
proto.cmapi.GeoRenderable.prototype.addTimeSpan = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 4, opt_value, proto.cmapi.GeoTimeSpan, opt_index);
};


proto.cmapi.GeoRenderable.prototype.clearTimeSpanList = function() {
  this.setTimeSpanList([]);
};


/**
 * optional GeoLabelStyle label_style = 5;
 * @return {?proto.cmapi.GeoLabelStyle}
 */
proto.cmapi.GeoRenderable.prototype.getLabelStyle = function() {
  return /** @type{?proto.cmapi.GeoLabelStyle} */ (
    jspb.Message.getWrapperField(this, proto.cmapi.GeoLabelStyle, 5));
};


/** @param {?proto.cmapi.GeoLabelStyle|undefined} value */
proto.cmapi.GeoRenderable.prototype.setLabelStyle = function(value) {
  jspb.Message.setWrapperField(this, 5, value);
};


proto.cmapi.GeoRenderable.prototype.clearLabelStyle = function() {
  this.setLabelStyle(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.cmapi.GeoRenderable.prototype.hasLabelStyle = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional GeoStrokeStyle stroke_style = 6;
 * @return {?proto.cmapi.GeoStrokeStyle}
 */
proto.cmapi.GeoRenderable.prototype.getStrokeStyle = function() {
  return /** @type{?proto.cmapi.GeoStrokeStyle} */ (
    jspb.Message.getWrapperField(this, proto.cmapi.GeoStrokeStyle, 6));
};


/** @param {?proto.cmapi.GeoStrokeStyle|undefined} value */
proto.cmapi.GeoRenderable.prototype.setStrokeStyle = function(value) {
  jspb.Message.setWrapperField(this, 6, value);
};


proto.cmapi.GeoRenderable.prototype.clearStrokeStyle = function() {
  this.setStrokeStyle(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.cmapi.GeoRenderable.prototype.hasStrokeStyle = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional GeoFillStyle fill_style = 7;
 * @return {?proto.cmapi.GeoFillStyle}
 */
proto.cmapi.GeoRenderable.prototype.getFillStyle = function() {
  return /** @type{?proto.cmapi.GeoFillStyle} */ (
    jspb.Message.getWrapperField(this, proto.cmapi.GeoFillStyle, 7));
};


/** @param {?proto.cmapi.GeoFillStyle|undefined} value */
proto.cmapi.GeoRenderable.prototype.setFillStyle = function(value) {
  jspb.Message.setWrapperField(this, 7, value);
};


proto.cmapi.GeoRenderable.prototype.clearFillStyle = function() {
  this.setFillStyle(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.cmapi.GeoRenderable.prototype.hasFillStyle = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional bool extrude = 8;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.cmapi.GeoRenderable.prototype.getExtrude = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 8, false));
};


/** @param {boolean} value */
proto.cmapi.GeoRenderable.prototype.setExtrude = function(value) {
  jspb.Message.setField(this, 8, value);
};


/**
 * optional bool tessellate = 9;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.cmapi.GeoRenderable.prototype.getTessellate = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 9, false));
};


/** @param {boolean} value */
proto.cmapi.GeoRenderable.prototype.setTessellate = function(value) {
  jspb.Message.setField(this, 9, value);
};


/**
 * optional double buffer = 10;
 * @return {number}
 */
proto.cmapi.GeoRenderable.prototype.getBuffer = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 10, 0.0));
};


/** @param {number} value */
proto.cmapi.GeoRenderable.prototype.setBuffer = function(value) {
  jspb.Message.setField(this, 10, value);
};


/**
 * optional double azimuth = 11;
 * @return {number}
 */
proto.cmapi.GeoRenderable.prototype.getAzimuth = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 11, 0.0));
};


/** @param {number} value */
proto.cmapi.GeoRenderable.prototype.setAzimuth = function(value) {
  jspb.Message.setField(this, 11, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cmapi.MilStdSymbol = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.cmapi.MilStdSymbol.repeatedFields_, null);
};
goog.inherits(proto.cmapi.MilStdSymbol, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.cmapi.MilStdSymbol.displayName = 'proto.cmapi.MilStdSymbol';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.cmapi.MilStdSymbol.repeatedFields_ = [6];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cmapi.MilStdSymbol.prototype.toObject = function(opt_includeInstance) {
  return proto.cmapi.MilStdSymbol.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cmapi.MilStdSymbol} msg The msg instance to transform.
 * @return {!Object}
 */
proto.cmapi.MilStdSymbol.toObject = function(includeInstance, msg) {
  var f, obj = {
    geoId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    name: jspb.Message.getFieldWithDefault(msg, 2, ""),
    symbolCode: jspb.Message.getFieldWithDefault(msg, 3, ""),
    symbolStandard: jspb.Message.getFieldWithDefault(msg, 4, 0),
    altitudeMode: jspb.Message.getFieldWithDefault(msg, 5, 0),
    positionList: jspb.Message.toObjectList(msg.getPositionList(),
    proto.cmapi.GeoPosition.toObject, includeInstance),
    modifierMap: (f = msg.getModifierMap()) ? f.toArray() : [],
    fillStyle: (f = msg.getFillStyle()) && proto.cmapi.GeoFillStyle.toObject(includeInstance, f),
    strokeStyle: (f = msg.getStrokeStyle()) && proto.cmapi.GeoStrokeStyle.toObject(includeInstance, f),
    labelStyle: (f = msg.getLabelStyle()) && proto.cmapi.GeoLabelStyle.toObject(includeInstance, f),
    isSelected: jspb.Message.getFieldWithDefault(msg, 11, false),
    mirrorKey: jspb.Message.getFieldWithDefault(msg, 12, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cmapi.MilStdSymbol}
 */
proto.cmapi.MilStdSymbol.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cmapi.MilStdSymbol;
  return proto.cmapi.MilStdSymbol.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cmapi.MilStdSymbol} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cmapi.MilStdSymbol}
 */
proto.cmapi.MilStdSymbol.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setGeoId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setSymbolCode(value);
      break;
    case 4:
      var value = /** @type {!proto.cmapi.SymbolStandard} */ (reader.readEnum());
      msg.setSymbolStandard(value);
      break;
    case 5:
      var value = /** @type {!proto.cmapi.AltitudeMode} */ (reader.readEnum());
      msg.setAltitudeMode(value);
      break;
    case 6:
      var value = new proto.cmapi.GeoPosition;
      reader.readMessage(value,proto.cmapi.GeoPosition.deserializeBinaryFromReader);
      msg.addPosition(value);
      break;
    case 7:
      var value = msg.getModifierMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readString);
         });
      break;
    case 8:
      var value = new proto.cmapi.GeoFillStyle;
      reader.readMessage(value,proto.cmapi.GeoFillStyle.deserializeBinaryFromReader);
      msg.setFillStyle(value);
      break;
    case 9:
      var value = new proto.cmapi.GeoStrokeStyle;
      reader.readMessage(value,proto.cmapi.GeoStrokeStyle.deserializeBinaryFromReader);
      msg.setStrokeStyle(value);
      break;
    case 10:
      var value = new proto.cmapi.GeoLabelStyle;
      reader.readMessage(value,proto.cmapi.GeoLabelStyle.deserializeBinaryFromReader);
      msg.setLabelStyle(value);
      break;
    case 11:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsSelected(value);
      break;
    case 12:
      var value = /** @type {string} */ (reader.readString());
      msg.setMirrorKey(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.cmapi.MilStdSymbol} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.cmapi.MilStdSymbol.serializeBinaryToWriter = function(message, writer) {
  message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cmapi.MilStdSymbol.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  this.serializeBinaryToWriter(writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.cmapi.MilStdSymbol.prototype.serializeBinaryToWriter = function (writer) {
  var f = undefined;
  f = this.getGeoId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = this.getName();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = this.getSymbolCode();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = this.getSymbolStandard();
  if (f !== 0.0) {
    writer.writeEnum(
      4,
      f
    );
  }
  f = this.getAltitudeMode();
  if (f !== 0.0) {
    writer.writeEnum(
      5,
      f
    );
  }
  f = this.getPositionList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      6,
      f,
      proto.cmapi.GeoPosition.serializeBinaryToWriter
    );
  }
  f = this.getModifierMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(7, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeString);
  }
  f = this.getFillStyle();
  if (f != null) {
    writer.writeMessage(
      8,
      f,
      proto.cmapi.GeoFillStyle.serializeBinaryToWriter
    );
  }
  f = this.getStrokeStyle();
  if (f != null) {
    writer.writeMessage(
      9,
      f,
      proto.cmapi.GeoStrokeStyle.serializeBinaryToWriter
    );
  }
  f = this.getLabelStyle();
  if (f != null) {
    writer.writeMessage(
      10,
      f,
      proto.cmapi.GeoLabelStyle.serializeBinaryToWriter
    );
  }
  f = this.getIsSelected();
  if (f) {
    writer.writeBool(
      11,
      f
    );
  }
  f = this.getMirrorKey();
  if (f.length > 0) {
    writer.writeString(
      12,
      f
    );
  }
};


/**
 * optional string geo_id = 1;
 * @return {string}
 */
proto.cmapi.MilStdSymbol.prototype.getGeoId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.cmapi.MilStdSymbol.prototype.setGeoId = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * optional string name = 2;
 * @return {string}
 */
proto.cmapi.MilStdSymbol.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.cmapi.MilStdSymbol.prototype.setName = function(value) {
  jspb.Message.setField(this, 2, value);
};


/**
 * optional string symbol_code = 3;
 * @return {string}
 */
proto.cmapi.MilStdSymbol.prototype.getSymbolCode = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/** @param {string} value */
proto.cmapi.MilStdSymbol.prototype.setSymbolCode = function(value) {
  jspb.Message.setField(this, 3, value);
};


/**
 * optional SymbolStandard symbol_standard = 4;
 * @return {!proto.cmapi.SymbolStandard}
 */
proto.cmapi.MilStdSymbol.prototype.getSymbolStandard = function() {
  return /** @type {!proto.cmapi.SymbolStandard} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/** @param {!proto.cmapi.SymbolStandard} value */
proto.cmapi.MilStdSymbol.prototype.setSymbolStandard = function(value) {
  jspb.Message.setField(this, 4, value);
};


/**
 * optional AltitudeMode altitude_mode = 5;
 * @return {!proto.cmapi.AltitudeMode}
 */
proto.cmapi.MilStdSymbol.prototype.getAltitudeMode = function() {
  return /** @type {!proto.cmapi.AltitudeMode} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/** @param {!proto.cmapi.AltitudeMode} value */
proto.cmapi.MilStdSymbol.prototype.setAltitudeMode = function(value) {
  jspb.Message.setField(this, 5, value);
};


/**
 * repeated GeoPosition position = 6;
 * If you change this array by adding, removing or replacing elements, or if you
 * replace the array itself, then you must call the setter to update it.
 * @return {!Array.<!proto.cmapi.GeoPosition>}
 */
proto.cmapi.MilStdSymbol.prototype.getPositionList = function() {
  return /** @type{!Array.<!proto.cmapi.GeoPosition>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.cmapi.GeoPosition, 6));
};


/** @param {!Array.<!proto.cmapi.GeoPosition>} value */
proto.cmapi.MilStdSymbol.prototype.setPositionList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 6, value);
};


/**
 * @param {!proto.cmapi.GeoPosition=} opt_value
 * @param {number=} opt_index
 * @return {!proto.cmapi.GeoPosition}
 */
proto.cmapi.MilStdSymbol.prototype.addPosition = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 6, opt_value, proto.cmapi.GeoPosition, opt_index);
};


proto.cmapi.MilStdSymbol.prototype.clearPositionList = function() {
  this.setPositionList([]);
};


/**
 * map<string, string> modifier = 7;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,string>}
 */
proto.cmapi.MilStdSymbol.prototype.getModifierMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,string>} */ (
      jspb.Message.getMapField(this, 7, opt_noLazyCreate,
      null));
};


proto.cmapi.MilStdSymbol.prototype.clearModifierMap = function() {
  this.getModifierMap().clear();
};


/**
 * optional GeoFillStyle fill_style = 8;
 * @return {?proto.cmapi.GeoFillStyle}
 */
proto.cmapi.MilStdSymbol.prototype.getFillStyle = function() {
  return /** @type{?proto.cmapi.GeoFillStyle} */ (
    jspb.Message.getWrapperField(this, proto.cmapi.GeoFillStyle, 8));
};


/** @param {?proto.cmapi.GeoFillStyle|undefined} value */
proto.cmapi.MilStdSymbol.prototype.setFillStyle = function(value) {
  jspb.Message.setWrapperField(this, 8, value);
};


proto.cmapi.MilStdSymbol.prototype.clearFillStyle = function() {
  this.setFillStyle(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.cmapi.MilStdSymbol.prototype.hasFillStyle = function() {
  return jspb.Message.getField(this, 8) != null;
};


/**
 * optional GeoStrokeStyle stroke_style = 9;
 * @return {?proto.cmapi.GeoStrokeStyle}
 */
proto.cmapi.MilStdSymbol.prototype.getStrokeStyle = function() {
  return /** @type{?proto.cmapi.GeoStrokeStyle} */ (
    jspb.Message.getWrapperField(this, proto.cmapi.GeoStrokeStyle, 9));
};


/** @param {?proto.cmapi.GeoStrokeStyle|undefined} value */
proto.cmapi.MilStdSymbol.prototype.setStrokeStyle = function(value) {
  jspb.Message.setWrapperField(this, 9, value);
};


proto.cmapi.MilStdSymbol.prototype.clearStrokeStyle = function() {
  this.setStrokeStyle(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.cmapi.MilStdSymbol.prototype.hasStrokeStyle = function() {
  return jspb.Message.getField(this, 9) != null;
};


/**
 * optional GeoLabelStyle label_style = 10;
 * @return {?proto.cmapi.GeoLabelStyle}
 */
proto.cmapi.MilStdSymbol.prototype.getLabelStyle = function() {
  return /** @type{?proto.cmapi.GeoLabelStyle} */ (
    jspb.Message.getWrapperField(this, proto.cmapi.GeoLabelStyle, 10));
};


/** @param {?proto.cmapi.GeoLabelStyle|undefined} value */
proto.cmapi.MilStdSymbol.prototype.setLabelStyle = function(value) {
  jspb.Message.setWrapperField(this, 10, value);
};


proto.cmapi.MilStdSymbol.prototype.clearLabelStyle = function() {
  this.setLabelStyle(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.cmapi.MilStdSymbol.prototype.hasLabelStyle = function() {
  return jspb.Message.getField(this, 10) != null;
};


/**
 * optional bool is_selected = 11;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.cmapi.MilStdSymbol.prototype.getIsSelected = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 11, false));
};


/** @param {boolean} value */
proto.cmapi.MilStdSymbol.prototype.setIsSelected = function(value) {
  jspb.Message.setField(this, 11, value);
};


/**
 * optional string mirror_key = 12;
 * @return {string}
 */
proto.cmapi.MilStdSymbol.prototype.getMirrorKey = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 12, ""));
};


/** @param {string} value */
proto.cmapi.MilStdSymbol.prototype.setMirrorKey = function(value) {
  jspb.Message.setField(this, 12, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cmapi.Circle = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cmapi.Circle, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.cmapi.Circle.displayName = 'proto.cmapi.Circle';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cmapi.Circle.prototype.toObject = function(opt_includeInstance) {
  return proto.cmapi.Circle.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cmapi.Circle} msg The msg instance to transform.
 * @return {!Object}
 */
proto.cmapi.Circle.toObject = function(includeInstance, msg) {
  var f, obj = {
    radius: +jspb.Message.getFieldWithDefault(msg, 1, 0.0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cmapi.Circle}
 */
proto.cmapi.Circle.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cmapi.Circle;
  return proto.cmapi.Circle.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cmapi.Circle} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cmapi.Circle}
 */
proto.cmapi.Circle.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setRadius(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.cmapi.Circle} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.cmapi.Circle.serializeBinaryToWriter = function(message, writer) {
  message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cmapi.Circle.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  this.serializeBinaryToWriter(writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.cmapi.Circle.prototype.serializeBinaryToWriter = function (writer) {
  var f = undefined;
  f = this.getRadius();
  if (f !== 0.0) {
    writer.writeDouble(
      1,
      f
    );
  }
};


/**
 * optional double radius = 1;
 * @return {number}
 */
proto.cmapi.Circle.prototype.getRadius = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 1, 0.0));
};


/** @param {number} value */
proto.cmapi.Circle.prototype.setRadius = function(value) {
  jspb.Message.setField(this, 1, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cmapi.OneOfFeature = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.cmapi.OneOfFeature.oneofGroups_);
};
goog.inherits(proto.cmapi.OneOfFeature, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.cmapi.OneOfFeature.displayName = 'proto.cmapi.OneOfFeature';
}
/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.cmapi.OneOfFeature.oneofGroups_ = [[1,2]];

/**
 * @enum {number}
 */
proto.cmapi.OneOfFeature.FeatureCase = {
  FEATURE_NOT_SET: 0,
  SYMBOL: 1,
  CIRCLE: 2
};

/**
 * @return {proto.cmapi.OneOfFeature.FeatureCase}
 */
proto.cmapi.OneOfFeature.prototype.getFeatureCase = function() {
  return /** @type {proto.cmapi.OneOfFeature.FeatureCase} */(jspb.Message.computeOneofCase(this, proto.cmapi.OneOfFeature.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cmapi.OneOfFeature.prototype.toObject = function(opt_includeInstance) {
  return proto.cmapi.OneOfFeature.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cmapi.OneOfFeature} msg The msg instance to transform.
 * @return {!Object}
 */
proto.cmapi.OneOfFeature.toObject = function(includeInstance, msg) {
  var f, obj = {
    symbol: (f = msg.getSymbol()) && proto.cmapi.MilStdSymbol.toObject(includeInstance, f),
    circle: (f = msg.getCircle()) && proto.cmapi.Circle.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cmapi.OneOfFeature}
 */
proto.cmapi.OneOfFeature.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cmapi.OneOfFeature;
  return proto.cmapi.OneOfFeature.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cmapi.OneOfFeature} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cmapi.OneOfFeature}
 */
proto.cmapi.OneOfFeature.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.cmapi.MilStdSymbol;
      reader.readMessage(value,proto.cmapi.MilStdSymbol.deserializeBinaryFromReader);
      msg.setSymbol(value);
      break;
    case 2:
      var value = new proto.cmapi.Circle;
      reader.readMessage(value,proto.cmapi.Circle.deserializeBinaryFromReader);
      msg.setCircle(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.cmapi.OneOfFeature} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.cmapi.OneOfFeature.serializeBinaryToWriter = function(message, writer) {
  message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cmapi.OneOfFeature.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  this.serializeBinaryToWriter(writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.cmapi.OneOfFeature.prototype.serializeBinaryToWriter = function (writer) {
  var f = undefined;
  f = this.getSymbol();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.cmapi.MilStdSymbol.serializeBinaryToWriter
    );
  }
  f = this.getCircle();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.cmapi.Circle.serializeBinaryToWriter
    );
  }
};


/**
 * optional MilStdSymbol symbol = 1;
 * @return {?proto.cmapi.MilStdSymbol}
 */
proto.cmapi.OneOfFeature.prototype.getSymbol = function() {
  return /** @type{?proto.cmapi.MilStdSymbol} */ (
    jspb.Message.getWrapperField(this, proto.cmapi.MilStdSymbol, 1));
};


/** @param {?proto.cmapi.MilStdSymbol|undefined} value */
proto.cmapi.OneOfFeature.prototype.setSymbol = function(value) {
  jspb.Message.setOneofWrapperField(this, 1, proto.cmapi.OneOfFeature.oneofGroups_[0], value);
};


proto.cmapi.OneOfFeature.prototype.clearSymbol = function() {
  this.setSymbol(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.cmapi.OneOfFeature.prototype.hasSymbol = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional Circle circle = 2;
 * @return {?proto.cmapi.Circle}
 */
proto.cmapi.OneOfFeature.prototype.getCircle = function() {
  return /** @type{?proto.cmapi.Circle} */ (
    jspb.Message.getWrapperField(this, proto.cmapi.Circle, 2));
};


/** @param {?proto.cmapi.Circle|undefined} value */
proto.cmapi.OneOfFeature.prototype.setCircle = function(value) {
  jspb.Message.setOneofWrapperField(this, 2, proto.cmapi.OneOfFeature.oneofGroups_[0], value);
};


proto.cmapi.OneOfFeature.prototype.clearCircle = function() {
  this.setCircle(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.cmapi.OneOfFeature.prototype.hasCircle = function() {
  return jspb.Message.getField(this, 2) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cmapi.Container = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.cmapi.Container.repeatedFields_, null);
};
goog.inherits(proto.cmapi.Container, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.cmapi.Container.displayName = 'proto.cmapi.Container';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.cmapi.Container.repeatedFields_ = [3];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cmapi.Container.prototype.toObject = function(opt_includeInstance) {
  return proto.cmapi.Container.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cmapi.Container} msg The msg instance to transform.
 * @return {!Object}
 */
proto.cmapi.Container.toObject = function(includeInstance, msg) {
  var f, obj = {
    geoId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    name: jspb.Message.getFieldWithDefault(msg, 2, ""),
    featureList: jspb.Message.toObjectList(msg.getFeatureList(),
    proto.cmapi.OneOfFeature.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cmapi.Container}
 */
proto.cmapi.Container.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cmapi.Container;
  return proto.cmapi.Container.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cmapi.Container} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cmapi.Container}
 */
proto.cmapi.Container.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setGeoId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 3:
      var value = new proto.cmapi.OneOfFeature;
      reader.readMessage(value,proto.cmapi.OneOfFeature.deserializeBinaryFromReader);
      msg.addFeature(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.cmapi.Container} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.cmapi.Container.serializeBinaryToWriter = function(message, writer) {
  message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cmapi.Container.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  this.serializeBinaryToWriter(writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.cmapi.Container.prototype.serializeBinaryToWriter = function (writer) {
  var f = undefined;
  f = this.getGeoId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = this.getName();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = this.getFeatureList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      3,
      f,
      proto.cmapi.OneOfFeature.serializeBinaryToWriter
    );
  }
};


/**
 * optional string geo_id = 1;
 * @return {string}
 */
proto.cmapi.Container.prototype.getGeoId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.cmapi.Container.prototype.setGeoId = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * optional string name = 2;
 * @return {string}
 */
proto.cmapi.Container.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.cmapi.Container.prototype.setName = function(value) {
  jspb.Message.setField(this, 2, value);
};


/**
 * repeated OneOfFeature feature = 3;
 * If you change this array by adding, removing or replacing elements, or if you
 * replace the array itself, then you must call the setter to update it.
 * @return {!Array.<!proto.cmapi.OneOfFeature>}
 */
proto.cmapi.Container.prototype.getFeatureList = function() {
  return /** @type{!Array.<!proto.cmapi.OneOfFeature>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.cmapi.OneOfFeature, 3));
};


/** @param {!Array.<!proto.cmapi.OneOfFeature>} value */
proto.cmapi.Container.prototype.setFeatureList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 3, value);
};


/**
 * @param {!proto.cmapi.OneOfFeature=} opt_value
 * @param {number=} opt_index
 * @return {!proto.cmapi.OneOfFeature}
 */
proto.cmapi.Container.prototype.addFeature = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.cmapi.OneOfFeature, opt_index);
};


proto.cmapi.Container.prototype.clearFeatureList = function() {
  this.setFeatureList([]);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cmapi.QueueInfo = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.cmapi.QueueInfo.repeatedFields_, null);
};
goog.inherits(proto.cmapi.QueueInfo, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.cmapi.QueueInfo.displayName = 'proto.cmapi.QueueInfo';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.cmapi.QueueInfo.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cmapi.QueueInfo.prototype.toObject = function(opt_includeInstance) {
  return proto.cmapi.QueueInfo.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cmapi.QueueInfo} msg The msg instance to transform.
 * @return {!Object}
 */
proto.cmapi.QueueInfo.toObject = function(includeInstance, msg) {
  var f, obj = {
    queueName: jspb.Message.getFieldWithDefault(msg, 1, ""),
    entryList: jspb.Message.getField(msg, 2)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cmapi.QueueInfo}
 */
proto.cmapi.QueueInfo.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cmapi.QueueInfo;
  return proto.cmapi.QueueInfo.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cmapi.QueueInfo} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cmapi.QueueInfo}
 */
proto.cmapi.QueueInfo.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setQueueName(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.addEntry(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.cmapi.QueueInfo} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.cmapi.QueueInfo.serializeBinaryToWriter = function(message, writer) {
  message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cmapi.QueueInfo.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  this.serializeBinaryToWriter(writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.cmapi.QueueInfo.prototype.serializeBinaryToWriter = function (writer) {
  var f = undefined;
  f = this.getQueueName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = this.getEntryList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      2,
      f
    );
  }
};


/**
 * optional string queue_name = 1;
 * @return {string}
 */
proto.cmapi.QueueInfo.prototype.getQueueName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.cmapi.QueueInfo.prototype.setQueueName = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * repeated string entry = 2;
 * If you change this array by adding, removing or replacing elements, or if you
 * replace the array itself, then you must call the setter to update it.
 * @return {!Array.<string>}
 */
proto.cmapi.QueueInfo.prototype.getEntryList = function() {
  return /** @type {!Array.<string>} */ (jspb.Message.getField(this, 2));
};


/** @param {!Array.<string>} value */
proto.cmapi.QueueInfo.prototype.setEntryList = function(value) {
  jspb.Message.setField(this, 2, value || []);
};


/**
 * @param {!string} value
 * @param {number=} opt_index
 */
proto.cmapi.QueueInfo.prototype.addEntry = function(value, opt_index) {
  jspb.Message.addToRepeatedField(this, 2, value, opt_index);
};


proto.cmapi.QueueInfo.prototype.clearEntryList = function() {
  this.setEntryList([]);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cmapi.CacheInfo = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.cmapi.CacheInfo.repeatedFields_, null);
};
goog.inherits(proto.cmapi.CacheInfo, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.cmapi.CacheInfo.displayName = 'proto.cmapi.CacheInfo';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.cmapi.CacheInfo.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cmapi.CacheInfo.prototype.toObject = function(opt_includeInstance) {
  return proto.cmapi.CacheInfo.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cmapi.CacheInfo} msg The msg instance to transform.
 * @return {!Object}
 */
proto.cmapi.CacheInfo.toObject = function(includeInstance, msg) {
  var f, obj = {
    name: jspb.Message.getFieldWithDefault(msg, 1, ""),
    entityidList: jspb.Message.getField(msg, 2)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cmapi.CacheInfo}
 */
proto.cmapi.CacheInfo.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cmapi.CacheInfo;
  return proto.cmapi.CacheInfo.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cmapi.CacheInfo} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cmapi.CacheInfo}
 */
proto.cmapi.CacheInfo.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 2:
      var value = /** @type {!Array.<number>} */ (reader.readPackedInt32());
      msg.setEntityidList(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.cmapi.CacheInfo} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.cmapi.CacheInfo.serializeBinaryToWriter = function(message, writer) {
  message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cmapi.CacheInfo.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  this.serializeBinaryToWriter(writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.cmapi.CacheInfo.prototype.serializeBinaryToWriter = function (writer) {
  var f = undefined;
  f = this.getName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = this.getEntityidList();
  if (f.length > 0) {
    writer.writePackedInt32(
      2,
      f
    );
  }
};


/**
 * optional string name = 1;
 * @return {string}
 */
proto.cmapi.CacheInfo.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.cmapi.CacheInfo.prototype.setName = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * repeated int32 entityId = 2;
 * If you change this array by adding, removing or replacing elements, or if you
 * replace the array itself, then you must call the setter to update it.
 * @return {!Array.<number>}
 */
proto.cmapi.CacheInfo.prototype.getEntityidList = function() {
  return /** @type {!Array.<number>} */ (jspb.Message.getField(this, 2));
};


/** @param {!Array.<number>} value */
proto.cmapi.CacheInfo.prototype.setEntityidList = function(value) {
  jspb.Message.setField(this, 2, value || []);
};


/**
 * @param {!number} value
 * @param {number=} opt_index
 */
proto.cmapi.CacheInfo.prototype.addEntityid = function(value, opt_index) {
  jspb.Message.addToRepeatedField(this, 2, value, opt_index);
};


proto.cmapi.CacheInfo.prototype.clearEntityidList = function() {
  this.setEntityidList([]);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cmapi.MemberInfo = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cmapi.MemberInfo, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.cmapi.MemberInfo.displayName = 'proto.cmapi.MemberInfo';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cmapi.MemberInfo.prototype.toObject = function(opt_includeInstance) {
  return proto.cmapi.MemberInfo.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cmapi.MemberInfo} msg The msg instance to transform.
 * @return {!Object}
 */
proto.cmapi.MemberInfo.toObject = function(includeInstance, msg) {
  var f, obj = {
    sessionId: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cmapi.MemberInfo}
 */
proto.cmapi.MemberInfo.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cmapi.MemberInfo;
  return proto.cmapi.MemberInfo.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cmapi.MemberInfo} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cmapi.MemberInfo}
 */
proto.cmapi.MemberInfo.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setSessionId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.cmapi.MemberInfo} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.cmapi.MemberInfo.serializeBinaryToWriter = function(message, writer) {
  message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cmapi.MemberInfo.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  this.serializeBinaryToWriter(writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.cmapi.MemberInfo.prototype.serializeBinaryToWriter = function (writer) {
  var f = undefined;
  f = this.getSessionId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string session_id = 1;
 * @return {string}
 */
proto.cmapi.MemberInfo.prototype.getSessionId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.cmapi.MemberInfo.prototype.setSessionId = function(value) {
  jspb.Message.setField(this, 1, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cmapi.ChannelInfo = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.cmapi.ChannelInfo.repeatedFields_, null);
};
goog.inherits(proto.cmapi.ChannelInfo, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.cmapi.ChannelInfo.displayName = 'proto.cmapi.ChannelInfo';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.cmapi.ChannelInfo.repeatedFields_ = [5];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cmapi.ChannelInfo.prototype.toObject = function(opt_includeInstance) {
  return proto.cmapi.ChannelInfo.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cmapi.ChannelInfo} msg The msg instance to transform.
 * @return {!Object}
 */
proto.cmapi.ChannelInfo.toObject = function(includeInstance, msg) {
  var f, obj = {
    name: jspb.Message.getFieldWithDefault(msg, 1, ""),
    visibility: jspb.Message.getFieldWithDefault(msg, 2, ""),
    type: jspb.Message.getFieldWithDefault(msg, 3, ""),
    isOpen: jspb.Message.getFieldWithDefault(msg, 4, false),
    memberList: jspb.Message.toObjectList(msg.getMemberList(),
    proto.cmapi.MemberInfo.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cmapi.ChannelInfo}
 */
proto.cmapi.ChannelInfo.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cmapi.ChannelInfo;
  return proto.cmapi.ChannelInfo.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cmapi.ChannelInfo} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cmapi.ChannelInfo}
 */
proto.cmapi.ChannelInfo.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setVisibility(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setType(value);
      break;
    case 4:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsOpen(value);
      break;
    case 5:
      var value = new proto.cmapi.MemberInfo;
      reader.readMessage(value,proto.cmapi.MemberInfo.deserializeBinaryFromReader);
      msg.addMember(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.cmapi.ChannelInfo} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.cmapi.ChannelInfo.serializeBinaryToWriter = function(message, writer) {
  message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cmapi.ChannelInfo.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  this.serializeBinaryToWriter(writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.cmapi.ChannelInfo.prototype.serializeBinaryToWriter = function (writer) {
  var f = undefined;
  f = this.getName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = this.getVisibility();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = this.getType();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = this.getIsOpen();
  if (f) {
    writer.writeBool(
      4,
      f
    );
  }
  f = this.getMemberList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      5,
      f,
      proto.cmapi.MemberInfo.serializeBinaryToWriter
    );
  }
};


/**
 * optional string name = 1;
 * @return {string}
 */
proto.cmapi.ChannelInfo.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.cmapi.ChannelInfo.prototype.setName = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * optional string visibility = 2;
 * @return {string}
 */
proto.cmapi.ChannelInfo.prototype.getVisibility = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.cmapi.ChannelInfo.prototype.setVisibility = function(value) {
  jspb.Message.setField(this, 2, value);
};


/**
 * optional string type = 3;
 * @return {string}
 */
proto.cmapi.ChannelInfo.prototype.getType = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/** @param {string} value */
proto.cmapi.ChannelInfo.prototype.setType = function(value) {
  jspb.Message.setField(this, 3, value);
};


/**
 * optional bool is_open = 4;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.cmapi.ChannelInfo.prototype.getIsOpen = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 4, false));
};


/** @param {boolean} value */
proto.cmapi.ChannelInfo.prototype.setIsOpen = function(value) {
  jspb.Message.setField(this, 4, value);
};


/**
 * repeated MemberInfo member = 5;
 * If you change this array by adding, removing or replacing elements, or if you
 * replace the array itself, then you must call the setter to update it.
 * @return {!Array.<!proto.cmapi.MemberInfo>}
 */
proto.cmapi.ChannelInfo.prototype.getMemberList = function() {
  return /** @type{!Array.<!proto.cmapi.MemberInfo>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.cmapi.MemberInfo, 5));
};


/** @param {!Array.<!proto.cmapi.MemberInfo>} value */
proto.cmapi.ChannelInfo.prototype.setMemberList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 5, value);
};


/**
 * @param {!proto.cmapi.MemberInfo=} opt_value
 * @param {number=} opt_index
 * @return {!proto.cmapi.MemberInfo}
 */
proto.cmapi.ChannelInfo.prototype.addMember = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 5, opt_value, proto.cmapi.MemberInfo, opt_index);
};


proto.cmapi.ChannelInfo.prototype.clearMemberList = function() {
  this.setMemberList([]);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cmapi.ChannelGroupInfo = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.cmapi.ChannelGroupInfo.repeatedFields_, null);
};
goog.inherits(proto.cmapi.ChannelGroupInfo, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.cmapi.ChannelGroupInfo.displayName = 'proto.cmapi.ChannelGroupInfo';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.cmapi.ChannelGroupInfo.repeatedFields_ = [3,4];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cmapi.ChannelGroupInfo.prototype.toObject = function(opt_includeInstance) {
  return proto.cmapi.ChannelGroupInfo.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cmapi.ChannelGroupInfo} msg The msg instance to transform.
 * @return {!Object}
 */
proto.cmapi.ChannelGroupInfo.toObject = function(includeInstance, msg) {
  var f, obj = {
    name: jspb.Message.getFieldWithDefault(msg, 1, ""),
    isJoined: jspb.Message.getFieldWithDefault(msg, 2, false),
    channelList: jspb.Message.toObjectList(msg.getChannelList(),
    proto.cmapi.ChannelInfo.toObject, includeInstance),
    memberList: jspb.Message.toObjectList(msg.getMemberList(),
    proto.cmapi.MemberInfo.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cmapi.ChannelGroupInfo}
 */
proto.cmapi.ChannelGroupInfo.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cmapi.ChannelGroupInfo;
  return proto.cmapi.ChannelGroupInfo.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cmapi.ChannelGroupInfo} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cmapi.ChannelGroupInfo}
 */
proto.cmapi.ChannelGroupInfo.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 2:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsJoined(value);
      break;
    case 3:
      var value = new proto.cmapi.ChannelInfo;
      reader.readMessage(value,proto.cmapi.ChannelInfo.deserializeBinaryFromReader);
      msg.addChannel(value);
      break;
    case 4:
      var value = new proto.cmapi.MemberInfo;
      reader.readMessage(value,proto.cmapi.MemberInfo.deserializeBinaryFromReader);
      msg.addMember(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.cmapi.ChannelGroupInfo} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.cmapi.ChannelGroupInfo.serializeBinaryToWriter = function(message, writer) {
  message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cmapi.ChannelGroupInfo.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  this.serializeBinaryToWriter(writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.cmapi.ChannelGroupInfo.prototype.serializeBinaryToWriter = function (writer) {
  var f = undefined;
  f = this.getName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = this.getIsJoined();
  if (f) {
    writer.writeBool(
      2,
      f
    );
  }
  f = this.getChannelList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      3,
      f,
      proto.cmapi.ChannelInfo.serializeBinaryToWriter
    );
  }
  f = this.getMemberList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      4,
      f,
      proto.cmapi.MemberInfo.serializeBinaryToWriter
    );
  }
};


/**
 * optional string name = 1;
 * @return {string}
 */
proto.cmapi.ChannelGroupInfo.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.cmapi.ChannelGroupInfo.prototype.setName = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * optional bool is_joined = 2;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.cmapi.ChannelGroupInfo.prototype.getIsJoined = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 2, false));
};


/** @param {boolean} value */
proto.cmapi.ChannelGroupInfo.prototype.setIsJoined = function(value) {
  jspb.Message.setField(this, 2, value);
};


/**
 * repeated ChannelInfo channel = 3;
 * If you change this array by adding, removing or replacing elements, or if you
 * replace the array itself, then you must call the setter to update it.
 * @return {!Array.<!proto.cmapi.ChannelInfo>}
 */
proto.cmapi.ChannelGroupInfo.prototype.getChannelList = function() {
  return /** @type{!Array.<!proto.cmapi.ChannelInfo>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.cmapi.ChannelInfo, 3));
};


/** @param {!Array.<!proto.cmapi.ChannelInfo>} value */
proto.cmapi.ChannelGroupInfo.prototype.setChannelList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 3, value);
};


/**
 * @param {!proto.cmapi.ChannelInfo=} opt_value
 * @param {number=} opt_index
 * @return {!proto.cmapi.ChannelInfo}
 */
proto.cmapi.ChannelGroupInfo.prototype.addChannel = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.cmapi.ChannelInfo, opt_index);
};


proto.cmapi.ChannelGroupInfo.prototype.clearChannelList = function() {
  this.setChannelList([]);
};


/**
 * repeated MemberInfo member = 4;
 * If you change this array by adding, removing or replacing elements, or if you
 * replace the array itself, then you must call the setter to update it.
 * @return {!Array.<!proto.cmapi.MemberInfo>}
 */
proto.cmapi.ChannelGroupInfo.prototype.getMemberList = function() {
  return /** @type{!Array.<!proto.cmapi.MemberInfo>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.cmapi.MemberInfo, 4));
};


/** @param {!Array.<!proto.cmapi.MemberInfo>} value */
proto.cmapi.ChannelGroupInfo.prototype.setMemberList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 4, value);
};


/**
 * @param {!proto.cmapi.MemberInfo=} opt_value
 * @param {number=} opt_index
 * @return {!proto.cmapi.MemberInfo}
 */
proto.cmapi.ChannelGroupInfo.prototype.addMember = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 4, opt_value, proto.cmapi.MemberInfo, opt_index);
};


proto.cmapi.ChannelGroupInfo.prototype.clearMemberList = function() {
  this.setMemberList([]);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cmapi.EntityInfo = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cmapi.EntityInfo, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.cmapi.EntityInfo.displayName = 'proto.cmapi.EntityInfo';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cmapi.EntityInfo.prototype.toObject = function(opt_includeInstance) {
  return proto.cmapi.EntityInfo.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cmapi.EntityInfo} msg The msg instance to transform.
 * @return {!Object}
 */
proto.cmapi.EntityInfo.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, 0),
    version: jspb.Message.getFieldWithDefault(msg, 2, 0),
    payloadId: jspb.Message.getFieldWithDefault(msg, 3, ""),
    payloadType: jspb.Message.getFieldWithDefault(msg, 4, ""),
    payloadData: msg.getPayloadData_asB64(),
    createdTime: jspb.Message.getFieldWithDefault(msg, 6, 0),
    updatedTime: jspb.Message.getFieldWithDefault(msg, 7, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cmapi.EntityInfo}
 */
proto.cmapi.EntityInfo.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cmapi.EntityInfo;
  return proto.cmapi.EntityInfo.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cmapi.EntityInfo} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cmapi.EntityInfo}
 */
proto.cmapi.EntityInfo.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setVersion(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setPayloadId(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setPayloadType(value);
      break;
    case 5:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setPayloadData(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setCreatedTime(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setUpdatedTime(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.cmapi.EntityInfo} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.cmapi.EntityInfo.serializeBinaryToWriter = function(message, writer) {
  message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cmapi.EntityInfo.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  this.serializeBinaryToWriter(writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.cmapi.EntityInfo.prototype.serializeBinaryToWriter = function (writer) {
  var f = undefined;
  f = this.getId();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = this.getVersion();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = this.getPayloadId();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = this.getPayloadType();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = this.getPayloadData_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      5,
      f
    );
  }
  f = this.getCreatedTime();
  if (f !== 0) {
    writer.writeInt64(
      6,
      f
    );
  }
  f = this.getUpdatedTime();
  if (f !== 0) {
    writer.writeInt64(
      7,
      f
    );
  }
};


/**
 * optional int32 id = 1;
 * @return {number}
 */
proto.cmapi.EntityInfo.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.cmapi.EntityInfo.prototype.setId = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * optional int32 version = 2;
 * @return {number}
 */
proto.cmapi.EntityInfo.prototype.getVersion = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {number} value */
proto.cmapi.EntityInfo.prototype.setVersion = function(value) {
  jspb.Message.setField(this, 2, value);
};


/**
 * optional string payload_id = 3;
 * @return {string}
 */
proto.cmapi.EntityInfo.prototype.getPayloadId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/** @param {string} value */
proto.cmapi.EntityInfo.prototype.setPayloadId = function(value) {
  jspb.Message.setField(this, 3, value);
};


/**
 * optional string payload_type = 4;
 * @return {string}
 */
proto.cmapi.EntityInfo.prototype.getPayloadType = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/** @param {string} value */
proto.cmapi.EntityInfo.prototype.setPayloadType = function(value) {
  jspb.Message.setField(this, 4, value);
};


/**
 * optional bytes payload_data = 5;
 * @return {!(string|Uint8Array)}
 */
proto.cmapi.EntityInfo.prototype.getPayloadData = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * optional bytes payload_data = 5;
 * This is a type-conversion wrapper around `getPayloadData()`
 * @return {string}
 */
proto.cmapi.EntityInfo.prototype.getPayloadData_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getPayloadData()));
};


/**
 * optional bytes payload_data = 5;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getPayloadData()`
 * @return {!Uint8Array}
 */
proto.cmapi.EntityInfo.prototype.getPayloadData_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getPayloadData()));
};


/** @param {!(string|Uint8Array)} value */
proto.cmapi.EntityInfo.prototype.setPayloadData = function(value) {
  jspb.Message.setField(this, 5, value);
};


/**
 * optional int64 created_time = 6;
 * @return {number}
 */
proto.cmapi.EntityInfo.prototype.getCreatedTime = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/** @param {number} value */
proto.cmapi.EntityInfo.prototype.setCreatedTime = function(value) {
  jspb.Message.setField(this, 6, value);
};


/**
 * optional int64 updated_time = 7;
 * @return {number}
 */
proto.cmapi.EntityInfo.prototype.getUpdatedTime = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/** @param {number} value */
proto.cmapi.EntityInfo.prototype.setUpdatedTime = function(value) {
  jspb.Message.setField(this, 7, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cmapi.LogEntry = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cmapi.LogEntry, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.cmapi.LogEntry.displayName = 'proto.cmapi.LogEntry';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cmapi.LogEntry.prototype.toObject = function(opt_includeInstance) {
  return proto.cmapi.LogEntry.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cmapi.LogEntry} msg The msg instance to transform.
 * @return {!Object}
 */
proto.cmapi.LogEntry.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, 0),
    time: jspb.Message.getFieldWithDefault(msg, 2, 0),
    command: (f = msg.getCommand()) && proto.cmapi.OneOfCommand.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cmapi.LogEntry}
 */
proto.cmapi.LogEntry.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cmapi.LogEntry;
  return proto.cmapi.LogEntry.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cmapi.LogEntry} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cmapi.LogEntry}
 */
proto.cmapi.LogEntry.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setTime(value);
      break;
    case 3:
      var value = new proto.cmapi.OneOfCommand;
      reader.readMessage(value,proto.cmapi.OneOfCommand.deserializeBinaryFromReader);
      msg.setCommand(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.cmapi.LogEntry} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.cmapi.LogEntry.serializeBinaryToWriter = function(message, writer) {
  message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cmapi.LogEntry.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  this.serializeBinaryToWriter(writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.cmapi.LogEntry.prototype.serializeBinaryToWriter = function (writer) {
  var f = undefined;
  f = this.getId();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = this.getTime();
  if (f !== 0) {
    writer.writeInt64(
      2,
      f
    );
  }
  f = this.getCommand();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.cmapi.OneOfCommand.serializeBinaryToWriter
    );
  }
};


/**
 * optional int32 id = 1;
 * @return {number}
 */
proto.cmapi.LogEntry.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.cmapi.LogEntry.prototype.setId = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * optional int64 time = 2;
 * @return {number}
 */
proto.cmapi.LogEntry.prototype.getTime = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {number} value */
proto.cmapi.LogEntry.prototype.setTime = function(value) {
  jspb.Message.setField(this, 2, value);
};


/**
 * optional OneOfCommand command = 3;
 * @return {?proto.cmapi.OneOfCommand}
 */
proto.cmapi.LogEntry.prototype.getCommand = function() {
  return /** @type{?proto.cmapi.OneOfCommand} */ (
    jspb.Message.getWrapperField(this, proto.cmapi.OneOfCommand, 3));
};


/** @param {?proto.cmapi.OneOfCommand|undefined} value */
proto.cmapi.LogEntry.prototype.setCommand = function(value) {
  jspb.Message.setWrapperField(this, 3, value);
};


proto.cmapi.LogEntry.prototype.clearCommand = function() {
  this.setCommand(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.cmapi.LogEntry.prototype.hasCommand = function() {
  return jspb.Message.getField(this, 3) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cmapi.HistoryInfo = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.cmapi.HistoryInfo.repeatedFields_, null);
};
goog.inherits(proto.cmapi.HistoryInfo, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.cmapi.HistoryInfo.displayName = 'proto.cmapi.HistoryInfo';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.cmapi.HistoryInfo.repeatedFields_ = [3];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cmapi.HistoryInfo.prototype.toObject = function(opt_includeInstance) {
  return proto.cmapi.HistoryInfo.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cmapi.HistoryInfo} msg The msg instance to transform.
 * @return {!Object}
 */
proto.cmapi.HistoryInfo.toObject = function(includeInstance, msg) {
  var f, obj = {
    startTime: jspb.Message.getFieldWithDefault(msg, 1, 0),
    endTime: jspb.Message.getFieldWithDefault(msg, 2, 0),
    logList: jspb.Message.toObjectList(msg.getLogList(),
    proto.cmapi.LogEntry.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cmapi.HistoryInfo}
 */
proto.cmapi.HistoryInfo.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cmapi.HistoryInfo;
  return proto.cmapi.HistoryInfo.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cmapi.HistoryInfo} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cmapi.HistoryInfo}
 */
proto.cmapi.HistoryInfo.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setStartTime(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setEndTime(value);
      break;
    case 3:
      var value = new proto.cmapi.LogEntry;
      reader.readMessage(value,proto.cmapi.LogEntry.deserializeBinaryFromReader);
      msg.addLog(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.cmapi.HistoryInfo} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.cmapi.HistoryInfo.serializeBinaryToWriter = function(message, writer) {
  message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cmapi.HistoryInfo.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  this.serializeBinaryToWriter(writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.cmapi.HistoryInfo.prototype.serializeBinaryToWriter = function (writer) {
  var f = undefined;
  f = this.getStartTime();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = this.getEndTime();
  if (f !== 0) {
    writer.writeInt64(
      2,
      f
    );
  }
  f = this.getLogList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      3,
      f,
      proto.cmapi.LogEntry.serializeBinaryToWriter
    );
  }
};


/**
 * optional int64 start_time = 1;
 * @return {number}
 */
proto.cmapi.HistoryInfo.prototype.getStartTime = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.cmapi.HistoryInfo.prototype.setStartTime = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * optional int64 end_time = 2;
 * @return {number}
 */
proto.cmapi.HistoryInfo.prototype.getEndTime = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {number} value */
proto.cmapi.HistoryInfo.prototype.setEndTime = function(value) {
  jspb.Message.setField(this, 2, value);
};


/**
 * repeated LogEntry log = 3;
 * If you change this array by adding, removing or replacing elements, or if you
 * replace the array itself, then you must call the setter to update it.
 * @return {!Array.<!proto.cmapi.LogEntry>}
 */
proto.cmapi.HistoryInfo.prototype.getLogList = function() {
  return /** @type{!Array.<!proto.cmapi.LogEntry>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.cmapi.LogEntry, 3));
};


/** @param {!Array.<!proto.cmapi.LogEntry>} value */
proto.cmapi.HistoryInfo.prototype.setLogList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 3, value);
};


/**
 * @param {!proto.cmapi.LogEntry=} opt_value
 * @param {number=} opt_index
 * @return {!proto.cmapi.LogEntry}
 */
proto.cmapi.HistoryInfo.prototype.addLog = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.cmapi.LogEntry, opt_index);
};


proto.cmapi.HistoryInfo.prototype.clearLogList = function() {
  this.setLogList([]);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cmapi.OneOfCommand = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.cmapi.OneOfCommand.oneofGroups_);
};
goog.inherits(proto.cmapi.OneOfCommand, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.cmapi.OneOfCommand.displayName = 'proto.cmapi.OneOfCommand';
}
/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.cmapi.OneOfCommand.oneofGroups_ = [[100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117]];

/**
 * @enum {number}
 */
proto.cmapi.OneOfCommand.CommandCase = {
  COMMAND_NOT_SET: 0,
  CREATE_CHANNEL: 100,
  DELETE_CHANNEL: 101,
  FIND_CHANNELS: 102,
  CHANNEL_OPEN: 103,
  CHANNEL_CLOSE: 104,
  CHANNEL_PUBLISH: 105,
  CHANNEL_CACHE: 106,
  CHANNEL_HISTORY: 107,
  CREATE_CHANNEL_GROUP: 108,
  DELETE_CHANNEL_GROUP: 109,
  FIND_CHANNEL_GROUPS: 110,
  CHANNEL_GROUP_JOIN: 111,
  CHANNEL_GROUP_LEAVE: 112,
  CHANNEL_GROUP_ADD_CHANNEL: 113,
  CHANNEL_GROUP_REMOVE_CHANNEL: 114,
  CHANNEL_GROUP_PUBLISH: 115,
  CHANNEL_GROUP_CACHE: 116,
  CHANNEL_GROUP_HISTORY: 117
};

/**
 * @return {proto.cmapi.OneOfCommand.CommandCase}
 */
proto.cmapi.OneOfCommand.prototype.getCommandCase = function() {
  return /** @type {proto.cmapi.OneOfCommand.CommandCase} */(jspb.Message.computeOneofCase(this, proto.cmapi.OneOfCommand.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cmapi.OneOfCommand.prototype.toObject = function(opt_includeInstance) {
  return proto.cmapi.OneOfCommand.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cmapi.OneOfCommand} msg The msg instance to transform.
 * @return {!Object}
 */
proto.cmapi.OneOfCommand.toObject = function(includeInstance, msg) {
  var f, obj = {
    createChannel: (f = msg.getCreateChannel()) && proto.cmapi.CreateChannelCommand.toObject(includeInstance, f),
    deleteChannel: (f = msg.getDeleteChannel()) && proto.cmapi.DeleteChannelCommand.toObject(includeInstance, f),
    findChannels: (f = msg.getFindChannels()) && proto.cmapi.FindChannelsCommand.toObject(includeInstance, f),
    channelOpen: (f = msg.getChannelOpen()) && proto.cmapi.ChannelOpenCommand.toObject(includeInstance, f),
    channelClose: (f = msg.getChannelClose()) && proto.cmapi.ChannelCloseCommand.toObject(includeInstance, f),
    channelPublish: (f = msg.getChannelPublish()) && proto.cmapi.ChannelPublishCommand.toObject(includeInstance, f),
    channelCache: (f = msg.getChannelCache()) && proto.cmapi.ChannelCacheCommand.toObject(includeInstance, f),
    channelHistory: (f = msg.getChannelHistory()) && proto.cmapi.ChannelHistoryCommand.toObject(includeInstance, f),
    createChannelGroup: (f = msg.getCreateChannelGroup()) && proto.cmapi.CreateChannelGroupCommand.toObject(includeInstance, f),
    deleteChannelGroup: (f = msg.getDeleteChannelGroup()) && proto.cmapi.DeleteChannelGroupCommand.toObject(includeInstance, f),
    findChannelGroups: (f = msg.getFindChannelGroups()) && proto.cmapi.FindChannelGroupsCommand.toObject(includeInstance, f),
    channelGroupJoin: (f = msg.getChannelGroupJoin()) && proto.cmapi.ChannelGroupJoinCommand.toObject(includeInstance, f),
    channelGroupLeave: (f = msg.getChannelGroupLeave()) && proto.cmapi.ChannelGroupLeaveCommand.toObject(includeInstance, f),
    channelGroupAddChannel: (f = msg.getChannelGroupAddChannel()) && proto.cmapi.ChannelGroupAddChannelCommand.toObject(includeInstance, f),
    channelGroupRemoveChannel: (f = msg.getChannelGroupRemoveChannel()) && proto.cmapi.ChannelGroupRemoveChannelCommand.toObject(includeInstance, f),
    channelGroupPublish: (f = msg.getChannelGroupPublish()) && proto.cmapi.ChannelGroupPublishCommand.toObject(includeInstance, f),
    channelGroupCache: (f = msg.getChannelGroupCache()) && proto.cmapi.ChannelGroupCacheCommand.toObject(includeInstance, f),
    channelGroupHistory: (f = msg.getChannelGroupHistory()) && proto.cmapi.ChannelGroupHistoryCommand.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cmapi.OneOfCommand}
 */
proto.cmapi.OneOfCommand.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cmapi.OneOfCommand;
  return proto.cmapi.OneOfCommand.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cmapi.OneOfCommand} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cmapi.OneOfCommand}
 */
proto.cmapi.OneOfCommand.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 100:
      var value = new proto.cmapi.CreateChannelCommand;
      reader.readMessage(value,proto.cmapi.CreateChannelCommand.deserializeBinaryFromReader);
      msg.setCreateChannel(value);
      break;
    case 101:
      var value = new proto.cmapi.DeleteChannelCommand;
      reader.readMessage(value,proto.cmapi.DeleteChannelCommand.deserializeBinaryFromReader);
      msg.setDeleteChannel(value);
      break;
    case 102:
      var value = new proto.cmapi.FindChannelsCommand;
      reader.readMessage(value,proto.cmapi.FindChannelsCommand.deserializeBinaryFromReader);
      msg.setFindChannels(value);
      break;
    case 103:
      var value = new proto.cmapi.ChannelOpenCommand;
      reader.readMessage(value,proto.cmapi.ChannelOpenCommand.deserializeBinaryFromReader);
      msg.setChannelOpen(value);
      break;
    case 104:
      var value = new proto.cmapi.ChannelCloseCommand;
      reader.readMessage(value,proto.cmapi.ChannelCloseCommand.deserializeBinaryFromReader);
      msg.setChannelClose(value);
      break;
    case 105:
      var value = new proto.cmapi.ChannelPublishCommand;
      reader.readMessage(value,proto.cmapi.ChannelPublishCommand.deserializeBinaryFromReader);
      msg.setChannelPublish(value);
      break;
    case 106:
      var value = new proto.cmapi.ChannelCacheCommand;
      reader.readMessage(value,proto.cmapi.ChannelCacheCommand.deserializeBinaryFromReader);
      msg.setChannelCache(value);
      break;
    case 107:
      var value = new proto.cmapi.ChannelHistoryCommand;
      reader.readMessage(value,proto.cmapi.ChannelHistoryCommand.deserializeBinaryFromReader);
      msg.setChannelHistory(value);
      break;
    case 108:
      var value = new proto.cmapi.CreateChannelGroupCommand;
      reader.readMessage(value,proto.cmapi.CreateChannelGroupCommand.deserializeBinaryFromReader);
      msg.setCreateChannelGroup(value);
      break;
    case 109:
      var value = new proto.cmapi.DeleteChannelGroupCommand;
      reader.readMessage(value,proto.cmapi.DeleteChannelGroupCommand.deserializeBinaryFromReader);
      msg.setDeleteChannelGroup(value);
      break;
    case 110:
      var value = new proto.cmapi.FindChannelGroupsCommand;
      reader.readMessage(value,proto.cmapi.FindChannelGroupsCommand.deserializeBinaryFromReader);
      msg.setFindChannelGroups(value);
      break;
    case 111:
      var value = new proto.cmapi.ChannelGroupJoinCommand;
      reader.readMessage(value,proto.cmapi.ChannelGroupJoinCommand.deserializeBinaryFromReader);
      msg.setChannelGroupJoin(value);
      break;
    case 112:
      var value = new proto.cmapi.ChannelGroupLeaveCommand;
      reader.readMessage(value,proto.cmapi.ChannelGroupLeaveCommand.deserializeBinaryFromReader);
      msg.setChannelGroupLeave(value);
      break;
    case 113:
      var value = new proto.cmapi.ChannelGroupAddChannelCommand;
      reader.readMessage(value,proto.cmapi.ChannelGroupAddChannelCommand.deserializeBinaryFromReader);
      msg.setChannelGroupAddChannel(value);
      break;
    case 114:
      var value = new proto.cmapi.ChannelGroupRemoveChannelCommand;
      reader.readMessage(value,proto.cmapi.ChannelGroupRemoveChannelCommand.deserializeBinaryFromReader);
      msg.setChannelGroupRemoveChannel(value);
      break;
    case 115:
      var value = new proto.cmapi.ChannelGroupPublishCommand;
      reader.readMessage(value,proto.cmapi.ChannelGroupPublishCommand.deserializeBinaryFromReader);
      msg.setChannelGroupPublish(value);
      break;
    case 116:
      var value = new proto.cmapi.ChannelGroupCacheCommand;
      reader.readMessage(value,proto.cmapi.ChannelGroupCacheCommand.deserializeBinaryFromReader);
      msg.setChannelGroupCache(value);
      break;
    case 117:
      var value = new proto.cmapi.ChannelGroupHistoryCommand;
      reader.readMessage(value,proto.cmapi.ChannelGroupHistoryCommand.deserializeBinaryFromReader);
      msg.setChannelGroupHistory(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.cmapi.OneOfCommand} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.cmapi.OneOfCommand.serializeBinaryToWriter = function(message, writer) {
  message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cmapi.OneOfCommand.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  this.serializeBinaryToWriter(writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.cmapi.OneOfCommand.prototype.serializeBinaryToWriter = function (writer) {
  var f = undefined;
  f = this.getCreateChannel();
  if (f != null) {
    writer.writeMessage(
      100,
      f,
      proto.cmapi.CreateChannelCommand.serializeBinaryToWriter
    );
  }
  f = this.getDeleteChannel();
  if (f != null) {
    writer.writeMessage(
      101,
      f,
      proto.cmapi.DeleteChannelCommand.serializeBinaryToWriter
    );
  }
  f = this.getFindChannels();
  if (f != null) {
    writer.writeMessage(
      102,
      f,
      proto.cmapi.FindChannelsCommand.serializeBinaryToWriter
    );
  }
  f = this.getChannelOpen();
  if (f != null) {
    writer.writeMessage(
      103,
      f,
      proto.cmapi.ChannelOpenCommand.serializeBinaryToWriter
    );
  }
  f = this.getChannelClose();
  if (f != null) {
    writer.writeMessage(
      104,
      f,
      proto.cmapi.ChannelCloseCommand.serializeBinaryToWriter
    );
  }
  f = this.getChannelPublish();
  if (f != null) {
    writer.writeMessage(
      105,
      f,
      proto.cmapi.ChannelPublishCommand.serializeBinaryToWriter
    );
  }
  f = this.getChannelCache();
  if (f != null) {
    writer.writeMessage(
      106,
      f,
      proto.cmapi.ChannelCacheCommand.serializeBinaryToWriter
    );
  }
  f = this.getChannelHistory();
  if (f != null) {
    writer.writeMessage(
      107,
      f,
      proto.cmapi.ChannelHistoryCommand.serializeBinaryToWriter
    );
  }
  f = this.getCreateChannelGroup();
  if (f != null) {
    writer.writeMessage(
      108,
      f,
      proto.cmapi.CreateChannelGroupCommand.serializeBinaryToWriter
    );
  }
  f = this.getDeleteChannelGroup();
  if (f != null) {
    writer.writeMessage(
      109,
      f,
      proto.cmapi.DeleteChannelGroupCommand.serializeBinaryToWriter
    );
  }
  f = this.getFindChannelGroups();
  if (f != null) {
    writer.writeMessage(
      110,
      f,
      proto.cmapi.FindChannelGroupsCommand.serializeBinaryToWriter
    );
  }
  f = this.getChannelGroupJoin();
  if (f != null) {
    writer.writeMessage(
      111,
      f,
      proto.cmapi.ChannelGroupJoinCommand.serializeBinaryToWriter
    );
  }
  f = this.getChannelGroupLeave();
  if (f != null) {
    writer.writeMessage(
      112,
      f,
      proto.cmapi.ChannelGroupLeaveCommand.serializeBinaryToWriter
    );
  }
  f = this.getChannelGroupAddChannel();
  if (f != null) {
    writer.writeMessage(
      113,
      f,
      proto.cmapi.ChannelGroupAddChannelCommand.serializeBinaryToWriter
    );
  }
  f = this.getChannelGroupRemoveChannel();
  if (f != null) {
    writer.writeMessage(
      114,
      f,
      proto.cmapi.ChannelGroupRemoveChannelCommand.serializeBinaryToWriter
    );
  }
  f = this.getChannelGroupPublish();
  if (f != null) {
    writer.writeMessage(
      115,
      f,
      proto.cmapi.ChannelGroupPublishCommand.serializeBinaryToWriter
    );
  }
  f = this.getChannelGroupCache();
  if (f != null) {
    writer.writeMessage(
      116,
      f,
      proto.cmapi.ChannelGroupCacheCommand.serializeBinaryToWriter
    );
  }
  f = this.getChannelGroupHistory();
  if (f != null) {
    writer.writeMessage(
      117,
      f,
      proto.cmapi.ChannelGroupHistoryCommand.serializeBinaryToWriter
    );
  }
};


/**
 * optional CreateChannelCommand create_channel = 100;
 * @return {?proto.cmapi.CreateChannelCommand}
 */
proto.cmapi.OneOfCommand.prototype.getCreateChannel = function() {
  return /** @type{?proto.cmapi.CreateChannelCommand} */ (
    jspb.Message.getWrapperField(this, proto.cmapi.CreateChannelCommand, 100));
};


/** @param {?proto.cmapi.CreateChannelCommand|undefined} value */
proto.cmapi.OneOfCommand.prototype.setCreateChannel = function(value) {
  jspb.Message.setOneofWrapperField(this, 100, proto.cmapi.OneOfCommand.oneofGroups_[0], value);
};


proto.cmapi.OneOfCommand.prototype.clearCreateChannel = function() {
  this.setCreateChannel(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.cmapi.OneOfCommand.prototype.hasCreateChannel = function() {
  return jspb.Message.getField(this, 100) != null;
};


/**
 * optional DeleteChannelCommand delete_channel = 101;
 * @return {?proto.cmapi.DeleteChannelCommand}
 */
proto.cmapi.OneOfCommand.prototype.getDeleteChannel = function() {
  return /** @type{?proto.cmapi.DeleteChannelCommand} */ (
    jspb.Message.getWrapperField(this, proto.cmapi.DeleteChannelCommand, 101));
};


/** @param {?proto.cmapi.DeleteChannelCommand|undefined} value */
proto.cmapi.OneOfCommand.prototype.setDeleteChannel = function(value) {
  jspb.Message.setOneofWrapperField(this, 101, proto.cmapi.OneOfCommand.oneofGroups_[0], value);
};


proto.cmapi.OneOfCommand.prototype.clearDeleteChannel = function() {
  this.setDeleteChannel(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.cmapi.OneOfCommand.prototype.hasDeleteChannel = function() {
  return jspb.Message.getField(this, 101) != null;
};


/**
 * optional FindChannelsCommand find_channels = 102;
 * @return {?proto.cmapi.FindChannelsCommand}
 */
proto.cmapi.OneOfCommand.prototype.getFindChannels = function() {
  return /** @type{?proto.cmapi.FindChannelsCommand} */ (
    jspb.Message.getWrapperField(this, proto.cmapi.FindChannelsCommand, 102));
};


/** @param {?proto.cmapi.FindChannelsCommand|undefined} value */
proto.cmapi.OneOfCommand.prototype.setFindChannels = function(value) {
  jspb.Message.setOneofWrapperField(this, 102, proto.cmapi.OneOfCommand.oneofGroups_[0], value);
};


proto.cmapi.OneOfCommand.prototype.clearFindChannels = function() {
  this.setFindChannels(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.cmapi.OneOfCommand.prototype.hasFindChannels = function() {
  return jspb.Message.getField(this, 102) != null;
};


/**
 * optional ChannelOpenCommand channel_open = 103;
 * @return {?proto.cmapi.ChannelOpenCommand}
 */
proto.cmapi.OneOfCommand.prototype.getChannelOpen = function() {
  return /** @type{?proto.cmapi.ChannelOpenCommand} */ (
    jspb.Message.getWrapperField(this, proto.cmapi.ChannelOpenCommand, 103));
};


/** @param {?proto.cmapi.ChannelOpenCommand|undefined} value */
proto.cmapi.OneOfCommand.prototype.setChannelOpen = function(value) {
  jspb.Message.setOneofWrapperField(this, 103, proto.cmapi.OneOfCommand.oneofGroups_[0], value);
};


proto.cmapi.OneOfCommand.prototype.clearChannelOpen = function() {
  this.setChannelOpen(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.cmapi.OneOfCommand.prototype.hasChannelOpen = function() {
  return jspb.Message.getField(this, 103) != null;
};


/**
 * optional ChannelCloseCommand channel_close = 104;
 * @return {?proto.cmapi.ChannelCloseCommand}
 */
proto.cmapi.OneOfCommand.prototype.getChannelClose = function() {
  return /** @type{?proto.cmapi.ChannelCloseCommand} */ (
    jspb.Message.getWrapperField(this, proto.cmapi.ChannelCloseCommand, 104));
};


/** @param {?proto.cmapi.ChannelCloseCommand|undefined} value */
proto.cmapi.OneOfCommand.prototype.setChannelClose = function(value) {
  jspb.Message.setOneofWrapperField(this, 104, proto.cmapi.OneOfCommand.oneofGroups_[0], value);
};


proto.cmapi.OneOfCommand.prototype.clearChannelClose = function() {
  this.setChannelClose(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.cmapi.OneOfCommand.prototype.hasChannelClose = function() {
  return jspb.Message.getField(this, 104) != null;
};


/**
 * optional ChannelPublishCommand channel_publish = 105;
 * @return {?proto.cmapi.ChannelPublishCommand}
 */
proto.cmapi.OneOfCommand.prototype.getChannelPublish = function() {
  return /** @type{?proto.cmapi.ChannelPublishCommand} */ (
    jspb.Message.getWrapperField(this, proto.cmapi.ChannelPublishCommand, 105));
};


/** @param {?proto.cmapi.ChannelPublishCommand|undefined} value */
proto.cmapi.OneOfCommand.prototype.setChannelPublish = function(value) {
  jspb.Message.setOneofWrapperField(this, 105, proto.cmapi.OneOfCommand.oneofGroups_[0], value);
};


proto.cmapi.OneOfCommand.prototype.clearChannelPublish = function() {
  this.setChannelPublish(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.cmapi.OneOfCommand.prototype.hasChannelPublish = function() {
  return jspb.Message.getField(this, 105) != null;
};


/**
 * optional ChannelCacheCommand channel_cache = 106;
 * @return {?proto.cmapi.ChannelCacheCommand}
 */
proto.cmapi.OneOfCommand.prototype.getChannelCache = function() {
  return /** @type{?proto.cmapi.ChannelCacheCommand} */ (
    jspb.Message.getWrapperField(this, proto.cmapi.ChannelCacheCommand, 106));
};


/** @param {?proto.cmapi.ChannelCacheCommand|undefined} value */
proto.cmapi.OneOfCommand.prototype.setChannelCache = function(value) {
  jspb.Message.setOneofWrapperField(this, 106, proto.cmapi.OneOfCommand.oneofGroups_[0], value);
};


proto.cmapi.OneOfCommand.prototype.clearChannelCache = function() {
  this.setChannelCache(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.cmapi.OneOfCommand.prototype.hasChannelCache = function() {
  return jspb.Message.getField(this, 106) != null;
};


/**
 * optional ChannelHistoryCommand channel_history = 107;
 * @return {?proto.cmapi.ChannelHistoryCommand}
 */
proto.cmapi.OneOfCommand.prototype.getChannelHistory = function() {
  return /** @type{?proto.cmapi.ChannelHistoryCommand} */ (
    jspb.Message.getWrapperField(this, proto.cmapi.ChannelHistoryCommand, 107));
};


/** @param {?proto.cmapi.ChannelHistoryCommand|undefined} value */
proto.cmapi.OneOfCommand.prototype.setChannelHistory = function(value) {
  jspb.Message.setOneofWrapperField(this, 107, proto.cmapi.OneOfCommand.oneofGroups_[0], value);
};


proto.cmapi.OneOfCommand.prototype.clearChannelHistory = function() {
  this.setChannelHistory(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.cmapi.OneOfCommand.prototype.hasChannelHistory = function() {
  return jspb.Message.getField(this, 107) != null;
};


/**
 * optional CreateChannelGroupCommand create_channel_group = 108;
 * @return {?proto.cmapi.CreateChannelGroupCommand}
 */
proto.cmapi.OneOfCommand.prototype.getCreateChannelGroup = function() {
  return /** @type{?proto.cmapi.CreateChannelGroupCommand} */ (
    jspb.Message.getWrapperField(this, proto.cmapi.CreateChannelGroupCommand, 108));
};


/** @param {?proto.cmapi.CreateChannelGroupCommand|undefined} value */
proto.cmapi.OneOfCommand.prototype.setCreateChannelGroup = function(value) {
  jspb.Message.setOneofWrapperField(this, 108, proto.cmapi.OneOfCommand.oneofGroups_[0], value);
};


proto.cmapi.OneOfCommand.prototype.clearCreateChannelGroup = function() {
  this.setCreateChannelGroup(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.cmapi.OneOfCommand.prototype.hasCreateChannelGroup = function() {
  return jspb.Message.getField(this, 108) != null;
};


/**
 * optional DeleteChannelGroupCommand delete_channel_group = 109;
 * @return {?proto.cmapi.DeleteChannelGroupCommand}
 */
proto.cmapi.OneOfCommand.prototype.getDeleteChannelGroup = function() {
  return /** @type{?proto.cmapi.DeleteChannelGroupCommand} */ (
    jspb.Message.getWrapperField(this, proto.cmapi.DeleteChannelGroupCommand, 109));
};


/** @param {?proto.cmapi.DeleteChannelGroupCommand|undefined} value */
proto.cmapi.OneOfCommand.prototype.setDeleteChannelGroup = function(value) {
  jspb.Message.setOneofWrapperField(this, 109, proto.cmapi.OneOfCommand.oneofGroups_[0], value);
};


proto.cmapi.OneOfCommand.prototype.clearDeleteChannelGroup = function() {
  this.setDeleteChannelGroup(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.cmapi.OneOfCommand.prototype.hasDeleteChannelGroup = function() {
  return jspb.Message.getField(this, 109) != null;
};


/**
 * optional FindChannelGroupsCommand find_channel_groups = 110;
 * @return {?proto.cmapi.FindChannelGroupsCommand}
 */
proto.cmapi.OneOfCommand.prototype.getFindChannelGroups = function() {
  return /** @type{?proto.cmapi.FindChannelGroupsCommand} */ (
    jspb.Message.getWrapperField(this, proto.cmapi.FindChannelGroupsCommand, 110));
};


/** @param {?proto.cmapi.FindChannelGroupsCommand|undefined} value */
proto.cmapi.OneOfCommand.prototype.setFindChannelGroups = function(value) {
  jspb.Message.setOneofWrapperField(this, 110, proto.cmapi.OneOfCommand.oneofGroups_[0], value);
};


proto.cmapi.OneOfCommand.prototype.clearFindChannelGroups = function() {
  this.setFindChannelGroups(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.cmapi.OneOfCommand.prototype.hasFindChannelGroups = function() {
  return jspb.Message.getField(this, 110) != null;
};


/**
 * optional ChannelGroupJoinCommand channel_group_join = 111;
 * @return {?proto.cmapi.ChannelGroupJoinCommand}
 */
proto.cmapi.OneOfCommand.prototype.getChannelGroupJoin = function() {
  return /** @type{?proto.cmapi.ChannelGroupJoinCommand} */ (
    jspb.Message.getWrapperField(this, proto.cmapi.ChannelGroupJoinCommand, 111));
};


/** @param {?proto.cmapi.ChannelGroupJoinCommand|undefined} value */
proto.cmapi.OneOfCommand.prototype.setChannelGroupJoin = function(value) {
  jspb.Message.setOneofWrapperField(this, 111, proto.cmapi.OneOfCommand.oneofGroups_[0], value);
};


proto.cmapi.OneOfCommand.prototype.clearChannelGroupJoin = function() {
  this.setChannelGroupJoin(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.cmapi.OneOfCommand.prototype.hasChannelGroupJoin = function() {
  return jspb.Message.getField(this, 111) != null;
};


/**
 * optional ChannelGroupLeaveCommand channel_group_leave = 112;
 * @return {?proto.cmapi.ChannelGroupLeaveCommand}
 */
proto.cmapi.OneOfCommand.prototype.getChannelGroupLeave = function() {
  return /** @type{?proto.cmapi.ChannelGroupLeaveCommand} */ (
    jspb.Message.getWrapperField(this, proto.cmapi.ChannelGroupLeaveCommand, 112));
};


/** @param {?proto.cmapi.ChannelGroupLeaveCommand|undefined} value */
proto.cmapi.OneOfCommand.prototype.setChannelGroupLeave = function(value) {
  jspb.Message.setOneofWrapperField(this, 112, proto.cmapi.OneOfCommand.oneofGroups_[0], value);
};


proto.cmapi.OneOfCommand.prototype.clearChannelGroupLeave = function() {
  this.setChannelGroupLeave(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.cmapi.OneOfCommand.prototype.hasChannelGroupLeave = function() {
  return jspb.Message.getField(this, 112) != null;
};


/**
 * optional ChannelGroupAddChannelCommand channel_group_add_channel = 113;
 * @return {?proto.cmapi.ChannelGroupAddChannelCommand}
 */
proto.cmapi.OneOfCommand.prototype.getChannelGroupAddChannel = function() {
  return /** @type{?proto.cmapi.ChannelGroupAddChannelCommand} */ (
    jspb.Message.getWrapperField(this, proto.cmapi.ChannelGroupAddChannelCommand, 113));
};


/** @param {?proto.cmapi.ChannelGroupAddChannelCommand|undefined} value */
proto.cmapi.OneOfCommand.prototype.setChannelGroupAddChannel = function(value) {
  jspb.Message.setOneofWrapperField(this, 113, proto.cmapi.OneOfCommand.oneofGroups_[0], value);
};


proto.cmapi.OneOfCommand.prototype.clearChannelGroupAddChannel = function() {
  this.setChannelGroupAddChannel(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.cmapi.OneOfCommand.prototype.hasChannelGroupAddChannel = function() {
  return jspb.Message.getField(this, 113) != null;
};


/**
 * optional ChannelGroupRemoveChannelCommand channel_group_remove_channel = 114;
 * @return {?proto.cmapi.ChannelGroupRemoveChannelCommand}
 */
proto.cmapi.OneOfCommand.prototype.getChannelGroupRemoveChannel = function() {
  return /** @type{?proto.cmapi.ChannelGroupRemoveChannelCommand} */ (
    jspb.Message.getWrapperField(this, proto.cmapi.ChannelGroupRemoveChannelCommand, 114));
};


/** @param {?proto.cmapi.ChannelGroupRemoveChannelCommand|undefined} value */
proto.cmapi.OneOfCommand.prototype.setChannelGroupRemoveChannel = function(value) {
  jspb.Message.setOneofWrapperField(this, 114, proto.cmapi.OneOfCommand.oneofGroups_[0], value);
};


proto.cmapi.OneOfCommand.prototype.clearChannelGroupRemoveChannel = function() {
  this.setChannelGroupRemoveChannel(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.cmapi.OneOfCommand.prototype.hasChannelGroupRemoveChannel = function() {
  return jspb.Message.getField(this, 114) != null;
};


/**
 * optional ChannelGroupPublishCommand channel_group_publish = 115;
 * @return {?proto.cmapi.ChannelGroupPublishCommand}
 */
proto.cmapi.OneOfCommand.prototype.getChannelGroupPublish = function() {
  return /** @type{?proto.cmapi.ChannelGroupPublishCommand} */ (
    jspb.Message.getWrapperField(this, proto.cmapi.ChannelGroupPublishCommand, 115));
};


/** @param {?proto.cmapi.ChannelGroupPublishCommand|undefined} value */
proto.cmapi.OneOfCommand.prototype.setChannelGroupPublish = function(value) {
  jspb.Message.setOneofWrapperField(this, 115, proto.cmapi.OneOfCommand.oneofGroups_[0], value);
};


proto.cmapi.OneOfCommand.prototype.clearChannelGroupPublish = function() {
  this.setChannelGroupPublish(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.cmapi.OneOfCommand.prototype.hasChannelGroupPublish = function() {
  return jspb.Message.getField(this, 115) != null;
};


/**
 * optional ChannelGroupCacheCommand channel_group_cache = 116;
 * @return {?proto.cmapi.ChannelGroupCacheCommand}
 */
proto.cmapi.OneOfCommand.prototype.getChannelGroupCache = function() {
  return /** @type{?proto.cmapi.ChannelGroupCacheCommand} */ (
    jspb.Message.getWrapperField(this, proto.cmapi.ChannelGroupCacheCommand, 116));
};


/** @param {?proto.cmapi.ChannelGroupCacheCommand|undefined} value */
proto.cmapi.OneOfCommand.prototype.setChannelGroupCache = function(value) {
  jspb.Message.setOneofWrapperField(this, 116, proto.cmapi.OneOfCommand.oneofGroups_[0], value);
};


proto.cmapi.OneOfCommand.prototype.clearChannelGroupCache = function() {
  this.setChannelGroupCache(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.cmapi.OneOfCommand.prototype.hasChannelGroupCache = function() {
  return jspb.Message.getField(this, 116) != null;
};


/**
 * optional ChannelGroupHistoryCommand channel_group_history = 117;
 * @return {?proto.cmapi.ChannelGroupHistoryCommand}
 */
proto.cmapi.OneOfCommand.prototype.getChannelGroupHistory = function() {
  return /** @type{?proto.cmapi.ChannelGroupHistoryCommand} */ (
    jspb.Message.getWrapperField(this, proto.cmapi.ChannelGroupHistoryCommand, 117));
};


/** @param {?proto.cmapi.ChannelGroupHistoryCommand|undefined} value */
proto.cmapi.OneOfCommand.prototype.setChannelGroupHistory = function(value) {
  jspb.Message.setOneofWrapperField(this, 117, proto.cmapi.OneOfCommand.oneofGroups_[0], value);
};


proto.cmapi.OneOfCommand.prototype.clearChannelGroupHistory = function() {
  this.setChannelGroupHistory(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.cmapi.OneOfCommand.prototype.hasChannelGroupHistory = function() {
  return jspb.Message.getField(this, 117) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cmapi.ProtoPayload = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cmapi.ProtoPayload, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.cmapi.ProtoPayload.displayName = 'proto.cmapi.ProtoPayload';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cmapi.ProtoPayload.prototype.toObject = function(opt_includeInstance) {
  return proto.cmapi.ProtoPayload.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cmapi.ProtoPayload} msg The msg instance to transform.
 * @return {!Object}
 */
proto.cmapi.ProtoPayload.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    type: jspb.Message.getFieldWithDefault(msg, 2, ""),
    data: msg.getData_asB64()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cmapi.ProtoPayload}
 */
proto.cmapi.ProtoPayload.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cmapi.ProtoPayload;
  return proto.cmapi.ProtoPayload.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cmapi.ProtoPayload} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cmapi.ProtoPayload}
 */
proto.cmapi.ProtoPayload.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setType(value);
      break;
    case 3:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setData(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.cmapi.ProtoPayload} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.cmapi.ProtoPayload.serializeBinaryToWriter = function(message, writer) {
  message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cmapi.ProtoPayload.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  this.serializeBinaryToWriter(writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.cmapi.ProtoPayload.prototype.serializeBinaryToWriter = function (writer) {
  var f = undefined;
  f = this.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = this.getType();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = this.getData_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      3,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.cmapi.ProtoPayload.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.cmapi.ProtoPayload.prototype.setId = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * optional string type = 2;
 * @return {string}
 */
proto.cmapi.ProtoPayload.prototype.getType = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.cmapi.ProtoPayload.prototype.setType = function(value) {
  jspb.Message.setField(this, 2, value);
};


/**
 * optional bytes data = 3;
 * @return {!(string|Uint8Array)}
 */
proto.cmapi.ProtoPayload.prototype.getData = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * optional bytes data = 3;
 * This is a type-conversion wrapper around `getData()`
 * @return {string}
 */
proto.cmapi.ProtoPayload.prototype.getData_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getData()));
};


/**
 * optional bytes data = 3;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getData()`
 * @return {!Uint8Array}
 */
proto.cmapi.ProtoPayload.prototype.getData_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getData()));
};


/** @param {!(string|Uint8Array)} value */
proto.cmapi.ProtoPayload.prototype.setData = function(value) {
  jspb.Message.setField(this, 3, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cmapi.ProtoMessage = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cmapi.ProtoMessage, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.cmapi.ProtoMessage.displayName = 'proto.cmapi.ProtoMessage';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cmapi.ProtoMessage.prototype.toObject = function(opt_includeInstance) {
  return proto.cmapi.ProtoMessage.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cmapi.ProtoMessage} msg The msg instance to transform.
 * @return {!Object}
 */
proto.cmapi.ProtoMessage.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    propertyMap: (f = msg.getPropertyMap()) ? f.toArray() : [],
    priority: jspb.Message.getFieldWithDefault(msg, 3, 0),
    command: (f = msg.getCommand()) && proto.cmapi.OneOfCommand.toObject(includeInstance, f),
    payload: (f = msg.getPayload()) && proto.cmapi.ProtoPayload.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cmapi.ProtoMessage}
 */
proto.cmapi.ProtoMessage.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cmapi.ProtoMessage;
  return proto.cmapi.ProtoMessage.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cmapi.ProtoMessage} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cmapi.ProtoMessage}
 */
proto.cmapi.ProtoMessage.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = msg.getPropertyMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readString);
         });
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setPriority(value);
      break;
    case 4:
      var value = new proto.cmapi.OneOfCommand;
      reader.readMessage(value,proto.cmapi.OneOfCommand.deserializeBinaryFromReader);
      msg.setCommand(value);
      break;
    case 5:
      var value = new proto.cmapi.ProtoPayload;
      reader.readMessage(value,proto.cmapi.ProtoPayload.deserializeBinaryFromReader);
      msg.setPayload(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.cmapi.ProtoMessage} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.cmapi.ProtoMessage.serializeBinaryToWriter = function(message, writer) {
  message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cmapi.ProtoMessage.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  this.serializeBinaryToWriter(writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.cmapi.ProtoMessage.prototype.serializeBinaryToWriter = function (writer) {
  var f = undefined;
  f = this.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = this.getPropertyMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(2, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeString);
  }
  f = this.getPriority();
  if (f !== 0) {
    writer.writeInt32(
      3,
      f
    );
  }
  f = this.getCommand();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.cmapi.OneOfCommand.serializeBinaryToWriter
    );
  }
  f = this.getPayload();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      proto.cmapi.ProtoPayload.serializeBinaryToWriter
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.cmapi.ProtoMessage.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.cmapi.ProtoMessage.prototype.setId = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * map<string, string> property = 2;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,string>}
 */
proto.cmapi.ProtoMessage.prototype.getPropertyMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,string>} */ (
      jspb.Message.getMapField(this, 2, opt_noLazyCreate,
      null));
};


proto.cmapi.ProtoMessage.prototype.clearPropertyMap = function() {
  this.getPropertyMap().clear();
};


/**
 * optional int32 priority = 3;
 * @return {number}
 */
proto.cmapi.ProtoMessage.prototype.getPriority = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/** @param {number} value */
proto.cmapi.ProtoMessage.prototype.setPriority = function(value) {
  jspb.Message.setField(this, 3, value);
};


/**
 * optional OneOfCommand command = 4;
 * @return {?proto.cmapi.OneOfCommand}
 */
proto.cmapi.ProtoMessage.prototype.getCommand = function() {
  return /** @type{?proto.cmapi.OneOfCommand} */ (
    jspb.Message.getWrapperField(this, proto.cmapi.OneOfCommand, 4));
};


/** @param {?proto.cmapi.OneOfCommand|undefined} value */
proto.cmapi.ProtoMessage.prototype.setCommand = function(value) {
  jspb.Message.setWrapperField(this, 4, value);
};


proto.cmapi.ProtoMessage.prototype.clearCommand = function() {
  this.setCommand(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.cmapi.ProtoMessage.prototype.hasCommand = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional ProtoPayload payload = 5;
 * @return {?proto.cmapi.ProtoPayload}
 */
proto.cmapi.ProtoMessage.prototype.getPayload = function() {
  return /** @type{?proto.cmapi.ProtoPayload} */ (
    jspb.Message.getWrapperField(this, proto.cmapi.ProtoPayload, 5));
};


/** @param {?proto.cmapi.ProtoPayload|undefined} value */
proto.cmapi.ProtoMessage.prototype.setPayload = function(value) {
  jspb.Message.setWrapperField(this, 5, value);
};


proto.cmapi.ProtoMessage.prototype.clearPayload = function() {
  this.setPayload(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.cmapi.ProtoMessage.prototype.hasPayload = function() {
  return jspb.Message.getField(this, 5) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cmapi.ChannelGroupJoinCommand = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cmapi.ChannelGroupJoinCommand, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.cmapi.ChannelGroupJoinCommand.displayName = 'proto.cmapi.ChannelGroupJoinCommand';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cmapi.ChannelGroupJoinCommand.prototype.toObject = function(opt_includeInstance) {
  return proto.cmapi.ChannelGroupJoinCommand.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cmapi.ChannelGroupJoinCommand} msg The msg instance to transform.
 * @return {!Object}
 */
proto.cmapi.ChannelGroupJoinCommand.toObject = function(includeInstance, msg) {
  var f, obj = {
    status: jspb.Message.getFieldWithDefault(msg, 1, 0),
    channelGroupName: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cmapi.ChannelGroupJoinCommand}
 */
proto.cmapi.ChannelGroupJoinCommand.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cmapi.ChannelGroupJoinCommand;
  return proto.cmapi.ChannelGroupJoinCommand.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cmapi.ChannelGroupJoinCommand} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cmapi.ChannelGroupJoinCommand}
 */
proto.cmapi.ChannelGroupJoinCommand.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.cmapi.Status} */ (reader.readEnum());
      msg.setStatus(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setChannelGroupName(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.cmapi.ChannelGroupJoinCommand} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.cmapi.ChannelGroupJoinCommand.serializeBinaryToWriter = function(message, writer) {
  message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cmapi.ChannelGroupJoinCommand.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  this.serializeBinaryToWriter(writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.cmapi.ChannelGroupJoinCommand.prototype.serializeBinaryToWriter = function (writer) {
  var f = undefined;
  f = this.getStatus();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = this.getChannelGroupName();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional Status status = 1;
 * @return {!proto.cmapi.Status}
 */
proto.cmapi.ChannelGroupJoinCommand.prototype.getStatus = function() {
  return /** @type {!proto.cmapi.Status} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {!proto.cmapi.Status} value */
proto.cmapi.ChannelGroupJoinCommand.prototype.setStatus = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * optional string channel_group_name = 2;
 * @return {string}
 */
proto.cmapi.ChannelGroupJoinCommand.prototype.getChannelGroupName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.cmapi.ChannelGroupJoinCommand.prototype.setChannelGroupName = function(value) {
  jspb.Message.setField(this, 2, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cmapi.ChannelGroupLeaveCommand = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cmapi.ChannelGroupLeaveCommand, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.cmapi.ChannelGroupLeaveCommand.displayName = 'proto.cmapi.ChannelGroupLeaveCommand';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cmapi.ChannelGroupLeaveCommand.prototype.toObject = function(opt_includeInstance) {
  return proto.cmapi.ChannelGroupLeaveCommand.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cmapi.ChannelGroupLeaveCommand} msg The msg instance to transform.
 * @return {!Object}
 */
proto.cmapi.ChannelGroupLeaveCommand.toObject = function(includeInstance, msg) {
  var f, obj = {
    status: jspb.Message.getFieldWithDefault(msg, 1, 0),
    channelGroupName: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cmapi.ChannelGroupLeaveCommand}
 */
proto.cmapi.ChannelGroupLeaveCommand.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cmapi.ChannelGroupLeaveCommand;
  return proto.cmapi.ChannelGroupLeaveCommand.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cmapi.ChannelGroupLeaveCommand} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cmapi.ChannelGroupLeaveCommand}
 */
proto.cmapi.ChannelGroupLeaveCommand.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.cmapi.Status} */ (reader.readEnum());
      msg.setStatus(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setChannelGroupName(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.cmapi.ChannelGroupLeaveCommand} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.cmapi.ChannelGroupLeaveCommand.serializeBinaryToWriter = function(message, writer) {
  message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cmapi.ChannelGroupLeaveCommand.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  this.serializeBinaryToWriter(writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.cmapi.ChannelGroupLeaveCommand.prototype.serializeBinaryToWriter = function (writer) {
  var f = undefined;
  f = this.getStatus();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = this.getChannelGroupName();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional Status status = 1;
 * @return {!proto.cmapi.Status}
 */
proto.cmapi.ChannelGroupLeaveCommand.prototype.getStatus = function() {
  return /** @type {!proto.cmapi.Status} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {!proto.cmapi.Status} value */
proto.cmapi.ChannelGroupLeaveCommand.prototype.setStatus = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * optional string channel_group_name = 2;
 * @return {string}
 */
proto.cmapi.ChannelGroupLeaveCommand.prototype.getChannelGroupName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.cmapi.ChannelGroupLeaveCommand.prototype.setChannelGroupName = function(value) {
  jspb.Message.setField(this, 2, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cmapi.ChannelGroupAddChannelCommand = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cmapi.ChannelGroupAddChannelCommand, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.cmapi.ChannelGroupAddChannelCommand.displayName = 'proto.cmapi.ChannelGroupAddChannelCommand';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cmapi.ChannelGroupAddChannelCommand.prototype.toObject = function(opt_includeInstance) {
  return proto.cmapi.ChannelGroupAddChannelCommand.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cmapi.ChannelGroupAddChannelCommand} msg The msg instance to transform.
 * @return {!Object}
 */
proto.cmapi.ChannelGroupAddChannelCommand.toObject = function(includeInstance, msg) {
  var f, obj = {
    status: jspb.Message.getFieldWithDefault(msg, 1, 0),
    channelGroupName: jspb.Message.getFieldWithDefault(msg, 2, ""),
    channelName: jspb.Message.getFieldWithDefault(msg, 3, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cmapi.ChannelGroupAddChannelCommand}
 */
proto.cmapi.ChannelGroupAddChannelCommand.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cmapi.ChannelGroupAddChannelCommand;
  return proto.cmapi.ChannelGroupAddChannelCommand.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cmapi.ChannelGroupAddChannelCommand} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cmapi.ChannelGroupAddChannelCommand}
 */
proto.cmapi.ChannelGroupAddChannelCommand.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.cmapi.Status} */ (reader.readEnum());
      msg.setStatus(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setChannelGroupName(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setChannelName(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.cmapi.ChannelGroupAddChannelCommand} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.cmapi.ChannelGroupAddChannelCommand.serializeBinaryToWriter = function(message, writer) {
  message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cmapi.ChannelGroupAddChannelCommand.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  this.serializeBinaryToWriter(writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.cmapi.ChannelGroupAddChannelCommand.prototype.serializeBinaryToWriter = function (writer) {
  var f = undefined;
  f = this.getStatus();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = this.getChannelGroupName();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = this.getChannelName();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * optional Status status = 1;
 * @return {!proto.cmapi.Status}
 */
proto.cmapi.ChannelGroupAddChannelCommand.prototype.getStatus = function() {
  return /** @type {!proto.cmapi.Status} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {!proto.cmapi.Status} value */
proto.cmapi.ChannelGroupAddChannelCommand.prototype.setStatus = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * optional string channel_group_name = 2;
 * @return {string}
 */
proto.cmapi.ChannelGroupAddChannelCommand.prototype.getChannelGroupName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.cmapi.ChannelGroupAddChannelCommand.prototype.setChannelGroupName = function(value) {
  jspb.Message.setField(this, 2, value);
};


/**
 * optional string channel_name = 3;
 * @return {string}
 */
proto.cmapi.ChannelGroupAddChannelCommand.prototype.getChannelName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/** @param {string} value */
proto.cmapi.ChannelGroupAddChannelCommand.prototype.setChannelName = function(value) {
  jspb.Message.setField(this, 3, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cmapi.ChannelGroupRemoveChannelCommand = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cmapi.ChannelGroupRemoveChannelCommand, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.cmapi.ChannelGroupRemoveChannelCommand.displayName = 'proto.cmapi.ChannelGroupRemoveChannelCommand';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cmapi.ChannelGroupRemoveChannelCommand.prototype.toObject = function(opt_includeInstance) {
  return proto.cmapi.ChannelGroupRemoveChannelCommand.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cmapi.ChannelGroupRemoveChannelCommand} msg The msg instance to transform.
 * @return {!Object}
 */
proto.cmapi.ChannelGroupRemoveChannelCommand.toObject = function(includeInstance, msg) {
  var f, obj = {
    status: jspb.Message.getFieldWithDefault(msg, 1, 0),
    channelGroupName: jspb.Message.getFieldWithDefault(msg, 2, ""),
    channelName: jspb.Message.getFieldWithDefault(msg, 3, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cmapi.ChannelGroupRemoveChannelCommand}
 */
proto.cmapi.ChannelGroupRemoveChannelCommand.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cmapi.ChannelGroupRemoveChannelCommand;
  return proto.cmapi.ChannelGroupRemoveChannelCommand.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cmapi.ChannelGroupRemoveChannelCommand} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cmapi.ChannelGroupRemoveChannelCommand}
 */
proto.cmapi.ChannelGroupRemoveChannelCommand.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.cmapi.Status} */ (reader.readEnum());
      msg.setStatus(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setChannelGroupName(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setChannelName(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.cmapi.ChannelGroupRemoveChannelCommand} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.cmapi.ChannelGroupRemoveChannelCommand.serializeBinaryToWriter = function(message, writer) {
  message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cmapi.ChannelGroupRemoveChannelCommand.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  this.serializeBinaryToWriter(writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.cmapi.ChannelGroupRemoveChannelCommand.prototype.serializeBinaryToWriter = function (writer) {
  var f = undefined;
  f = this.getStatus();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = this.getChannelGroupName();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = this.getChannelName();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * optional Status status = 1;
 * @return {!proto.cmapi.Status}
 */
proto.cmapi.ChannelGroupRemoveChannelCommand.prototype.getStatus = function() {
  return /** @type {!proto.cmapi.Status} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {!proto.cmapi.Status} value */
proto.cmapi.ChannelGroupRemoveChannelCommand.prototype.setStatus = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * optional string channel_group_name = 2;
 * @return {string}
 */
proto.cmapi.ChannelGroupRemoveChannelCommand.prototype.getChannelGroupName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.cmapi.ChannelGroupRemoveChannelCommand.prototype.setChannelGroupName = function(value) {
  jspb.Message.setField(this, 2, value);
};


/**
 * optional string channel_name = 3;
 * @return {string}
 */
proto.cmapi.ChannelGroupRemoveChannelCommand.prototype.getChannelName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/** @param {string} value */
proto.cmapi.ChannelGroupRemoveChannelCommand.prototype.setChannelName = function(value) {
  jspb.Message.setField(this, 3, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cmapi.ChannelGroupPublishCommand = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cmapi.ChannelGroupPublishCommand, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.cmapi.ChannelGroupPublishCommand.displayName = 'proto.cmapi.ChannelGroupPublishCommand';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cmapi.ChannelGroupPublishCommand.prototype.toObject = function(opt_includeInstance) {
  return proto.cmapi.ChannelGroupPublishCommand.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cmapi.ChannelGroupPublishCommand} msg The msg instance to transform.
 * @return {!Object}
 */
proto.cmapi.ChannelGroupPublishCommand.toObject = function(includeInstance, msg) {
  var f, obj = {
    status: jspb.Message.getFieldWithDefault(msg, 1, 0),
    channelGroupName: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cmapi.ChannelGroupPublishCommand}
 */
proto.cmapi.ChannelGroupPublishCommand.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cmapi.ChannelGroupPublishCommand;
  return proto.cmapi.ChannelGroupPublishCommand.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cmapi.ChannelGroupPublishCommand} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cmapi.ChannelGroupPublishCommand}
 */
proto.cmapi.ChannelGroupPublishCommand.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.cmapi.Status} */ (reader.readEnum());
      msg.setStatus(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setChannelGroupName(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.cmapi.ChannelGroupPublishCommand} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.cmapi.ChannelGroupPublishCommand.serializeBinaryToWriter = function(message, writer) {
  message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cmapi.ChannelGroupPublishCommand.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  this.serializeBinaryToWriter(writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.cmapi.ChannelGroupPublishCommand.prototype.serializeBinaryToWriter = function (writer) {
  var f = undefined;
  f = this.getStatus();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = this.getChannelGroupName();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional Status status = 1;
 * @return {!proto.cmapi.Status}
 */
proto.cmapi.ChannelGroupPublishCommand.prototype.getStatus = function() {
  return /** @type {!proto.cmapi.Status} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {!proto.cmapi.Status} value */
proto.cmapi.ChannelGroupPublishCommand.prototype.setStatus = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * optional string channel_group_name = 2;
 * @return {string}
 */
proto.cmapi.ChannelGroupPublishCommand.prototype.getChannelGroupName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.cmapi.ChannelGroupPublishCommand.prototype.setChannelGroupName = function(value) {
  jspb.Message.setField(this, 2, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cmapi.ChannelGroupCacheCommand = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.cmapi.ChannelGroupCacheCommand.repeatedFields_, null);
};
goog.inherits(proto.cmapi.ChannelGroupCacheCommand, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.cmapi.ChannelGroupCacheCommand.displayName = 'proto.cmapi.ChannelGroupCacheCommand';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.cmapi.ChannelGroupCacheCommand.repeatedFields_ = [3];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cmapi.ChannelGroupCacheCommand.prototype.toObject = function(opt_includeInstance) {
  return proto.cmapi.ChannelGroupCacheCommand.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cmapi.ChannelGroupCacheCommand} msg The msg instance to transform.
 * @return {!Object}
 */
proto.cmapi.ChannelGroupCacheCommand.toObject = function(includeInstance, msg) {
  var f, obj = {
    status: jspb.Message.getFieldWithDefault(msg, 1, 0),
    channelGroupName: jspb.Message.getFieldWithDefault(msg, 2, ""),
    entityIdList: jspb.Message.getField(msg, 3)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cmapi.ChannelGroupCacheCommand}
 */
proto.cmapi.ChannelGroupCacheCommand.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cmapi.ChannelGroupCacheCommand;
  return proto.cmapi.ChannelGroupCacheCommand.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cmapi.ChannelGroupCacheCommand} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cmapi.ChannelGroupCacheCommand}
 */
proto.cmapi.ChannelGroupCacheCommand.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.cmapi.Status} */ (reader.readEnum());
      msg.setStatus(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setChannelGroupName(value);
      break;
    case 3:
      var value = /** @type {!Array.<number>} */ (reader.readPackedInt32());
      msg.setEntityIdList(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.cmapi.ChannelGroupCacheCommand} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.cmapi.ChannelGroupCacheCommand.serializeBinaryToWriter = function(message, writer) {
  message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cmapi.ChannelGroupCacheCommand.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  this.serializeBinaryToWriter(writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.cmapi.ChannelGroupCacheCommand.prototype.serializeBinaryToWriter = function (writer) {
  var f = undefined;
  f = this.getStatus();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = this.getChannelGroupName();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = this.getEntityIdList();
  if (f.length > 0) {
    writer.writePackedInt32(
      3,
      f
    );
  }
};


/**
 * optional Status status = 1;
 * @return {!proto.cmapi.Status}
 */
proto.cmapi.ChannelGroupCacheCommand.prototype.getStatus = function() {
  return /** @type {!proto.cmapi.Status} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {!proto.cmapi.Status} value */
proto.cmapi.ChannelGroupCacheCommand.prototype.setStatus = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * optional string channel_group_name = 2;
 * @return {string}
 */
proto.cmapi.ChannelGroupCacheCommand.prototype.getChannelGroupName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.cmapi.ChannelGroupCacheCommand.prototype.setChannelGroupName = function(value) {
  jspb.Message.setField(this, 2, value);
};


/**
 * repeated int32 entity_id = 3;
 * If you change this array by adding, removing or replacing elements, or if you
 * replace the array itself, then you must call the setter to update it.
 * @return {!Array.<number>}
 */
proto.cmapi.ChannelGroupCacheCommand.prototype.getEntityIdList = function() {
  return /** @type {!Array.<number>} */ (jspb.Message.getField(this, 3));
};


/** @param {!Array.<number>} value */
proto.cmapi.ChannelGroupCacheCommand.prototype.setEntityIdList = function(value) {
  jspb.Message.setField(this, 3, value || []);
};


/**
 * @param {!number} value
 * @param {number=} opt_index
 */
proto.cmapi.ChannelGroupCacheCommand.prototype.addEntityId = function(value, opt_index) {
  jspb.Message.addToRepeatedField(this, 3, value, opt_index);
};


proto.cmapi.ChannelGroupCacheCommand.prototype.clearEntityIdList = function() {
  this.setEntityIdList([]);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cmapi.ChannelGroupHistoryCommand = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cmapi.ChannelGroupHistoryCommand, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.cmapi.ChannelGroupHistoryCommand.displayName = 'proto.cmapi.ChannelGroupHistoryCommand';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cmapi.ChannelGroupHistoryCommand.prototype.toObject = function(opt_includeInstance) {
  return proto.cmapi.ChannelGroupHistoryCommand.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cmapi.ChannelGroupHistoryCommand} msg The msg instance to transform.
 * @return {!Object}
 */
proto.cmapi.ChannelGroupHistoryCommand.toObject = function(includeInstance, msg) {
  var f, obj = {
    status: jspb.Message.getFieldWithDefault(msg, 1, 0),
    channelGroupName: jspb.Message.getFieldWithDefault(msg, 2, ""),
    startTime: jspb.Message.getFieldWithDefault(msg, 3, 0),
    endTime: jspb.Message.getFieldWithDefault(msg, 4, 0),
    history: (f = msg.getHistory()) && proto.cmapi.HistoryInfo.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cmapi.ChannelGroupHistoryCommand}
 */
proto.cmapi.ChannelGroupHistoryCommand.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cmapi.ChannelGroupHistoryCommand;
  return proto.cmapi.ChannelGroupHistoryCommand.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cmapi.ChannelGroupHistoryCommand} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cmapi.ChannelGroupHistoryCommand}
 */
proto.cmapi.ChannelGroupHistoryCommand.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.cmapi.Status} */ (reader.readEnum());
      msg.setStatus(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setChannelGroupName(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setStartTime(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setEndTime(value);
      break;
    case 5:
      var value = new proto.cmapi.HistoryInfo;
      reader.readMessage(value,proto.cmapi.HistoryInfo.deserializeBinaryFromReader);
      msg.setHistory(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.cmapi.ChannelGroupHistoryCommand} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.cmapi.ChannelGroupHistoryCommand.serializeBinaryToWriter = function(message, writer) {
  message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cmapi.ChannelGroupHistoryCommand.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  this.serializeBinaryToWriter(writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.cmapi.ChannelGroupHistoryCommand.prototype.serializeBinaryToWriter = function (writer) {
  var f = undefined;
  f = this.getStatus();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = this.getChannelGroupName();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = this.getStartTime();
  if (f !== 0) {
    writer.writeInt64(
      3,
      f
    );
  }
  f = this.getEndTime();
  if (f !== 0) {
    writer.writeInt64(
      4,
      f
    );
  }
  f = this.getHistory();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      proto.cmapi.HistoryInfo.serializeBinaryToWriter
    );
  }
};


/**
 * optional Status status = 1;
 * @return {!proto.cmapi.Status}
 */
proto.cmapi.ChannelGroupHistoryCommand.prototype.getStatus = function() {
  return /** @type {!proto.cmapi.Status} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {!proto.cmapi.Status} value */
proto.cmapi.ChannelGroupHistoryCommand.prototype.setStatus = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * optional string channel_group_name = 2;
 * @return {string}
 */
proto.cmapi.ChannelGroupHistoryCommand.prototype.getChannelGroupName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.cmapi.ChannelGroupHistoryCommand.prototype.setChannelGroupName = function(value) {
  jspb.Message.setField(this, 2, value);
};


/**
 * optional int64 start_time = 3;
 * @return {number}
 */
proto.cmapi.ChannelGroupHistoryCommand.prototype.getStartTime = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/** @param {number} value */
proto.cmapi.ChannelGroupHistoryCommand.prototype.setStartTime = function(value) {
  jspb.Message.setField(this, 3, value);
};


/**
 * optional int64 end_time = 4;
 * @return {number}
 */
proto.cmapi.ChannelGroupHistoryCommand.prototype.getEndTime = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/** @param {number} value */
proto.cmapi.ChannelGroupHistoryCommand.prototype.setEndTime = function(value) {
  jspb.Message.setField(this, 4, value);
};


/**
 * optional HistoryInfo history = 5;
 * @return {?proto.cmapi.HistoryInfo}
 */
proto.cmapi.ChannelGroupHistoryCommand.prototype.getHistory = function() {
  return /** @type{?proto.cmapi.HistoryInfo} */ (
    jspb.Message.getWrapperField(this, proto.cmapi.HistoryInfo, 5));
};


/** @param {?proto.cmapi.HistoryInfo|undefined} value */
proto.cmapi.ChannelGroupHistoryCommand.prototype.setHistory = function(value) {
  jspb.Message.setWrapperField(this, 5, value);
};


proto.cmapi.ChannelGroupHistoryCommand.prototype.clearHistory = function() {
  this.setHistory(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.cmapi.ChannelGroupHistoryCommand.prototype.hasHistory = function() {
  return jspb.Message.getField(this, 5) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cmapi.CreateChannelGroupCommand = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cmapi.CreateChannelGroupCommand, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.cmapi.CreateChannelGroupCommand.displayName = 'proto.cmapi.CreateChannelGroupCommand';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cmapi.CreateChannelGroupCommand.prototype.toObject = function(opt_includeInstance) {
  return proto.cmapi.CreateChannelGroupCommand.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cmapi.CreateChannelGroupCommand} msg The msg instance to transform.
 * @return {!Object}
 */
proto.cmapi.CreateChannelGroupCommand.toObject = function(includeInstance, msg) {
  var f, obj = {
    status: jspb.Message.getFieldWithDefault(msg, 1, 0),
    channelGroupName: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cmapi.CreateChannelGroupCommand}
 */
proto.cmapi.CreateChannelGroupCommand.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cmapi.CreateChannelGroupCommand;
  return proto.cmapi.CreateChannelGroupCommand.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cmapi.CreateChannelGroupCommand} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cmapi.CreateChannelGroupCommand}
 */
proto.cmapi.CreateChannelGroupCommand.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.cmapi.Status} */ (reader.readEnum());
      msg.setStatus(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setChannelGroupName(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.cmapi.CreateChannelGroupCommand} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.cmapi.CreateChannelGroupCommand.serializeBinaryToWriter = function(message, writer) {
  message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cmapi.CreateChannelGroupCommand.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  this.serializeBinaryToWriter(writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.cmapi.CreateChannelGroupCommand.prototype.serializeBinaryToWriter = function (writer) {
  var f = undefined;
  f = this.getStatus();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = this.getChannelGroupName();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional Status status = 1;
 * @return {!proto.cmapi.Status}
 */
proto.cmapi.CreateChannelGroupCommand.prototype.getStatus = function() {
  return /** @type {!proto.cmapi.Status} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {!proto.cmapi.Status} value */
proto.cmapi.CreateChannelGroupCommand.prototype.setStatus = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * optional string channel_group_name = 2;
 * @return {string}
 */
proto.cmapi.CreateChannelGroupCommand.prototype.getChannelGroupName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.cmapi.CreateChannelGroupCommand.prototype.setChannelGroupName = function(value) {
  jspb.Message.setField(this, 2, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cmapi.DeleteChannelGroupCommand = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cmapi.DeleteChannelGroupCommand, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.cmapi.DeleteChannelGroupCommand.displayName = 'proto.cmapi.DeleteChannelGroupCommand';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cmapi.DeleteChannelGroupCommand.prototype.toObject = function(opt_includeInstance) {
  return proto.cmapi.DeleteChannelGroupCommand.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cmapi.DeleteChannelGroupCommand} msg The msg instance to transform.
 * @return {!Object}
 */
proto.cmapi.DeleteChannelGroupCommand.toObject = function(includeInstance, msg) {
  var f, obj = {
    status: jspb.Message.getFieldWithDefault(msg, 1, 0),
    channelGroupName: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cmapi.DeleteChannelGroupCommand}
 */
proto.cmapi.DeleteChannelGroupCommand.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cmapi.DeleteChannelGroupCommand;
  return proto.cmapi.DeleteChannelGroupCommand.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cmapi.DeleteChannelGroupCommand} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cmapi.DeleteChannelGroupCommand}
 */
proto.cmapi.DeleteChannelGroupCommand.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.cmapi.Status} */ (reader.readEnum());
      msg.setStatus(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setChannelGroupName(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.cmapi.DeleteChannelGroupCommand} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.cmapi.DeleteChannelGroupCommand.serializeBinaryToWriter = function(message, writer) {
  message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cmapi.DeleteChannelGroupCommand.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  this.serializeBinaryToWriter(writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.cmapi.DeleteChannelGroupCommand.prototype.serializeBinaryToWriter = function (writer) {
  var f = undefined;
  f = this.getStatus();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = this.getChannelGroupName();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional Status status = 1;
 * @return {!proto.cmapi.Status}
 */
proto.cmapi.DeleteChannelGroupCommand.prototype.getStatus = function() {
  return /** @type {!proto.cmapi.Status} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {!proto.cmapi.Status} value */
proto.cmapi.DeleteChannelGroupCommand.prototype.setStatus = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * optional string channel_group_name = 2;
 * @return {string}
 */
proto.cmapi.DeleteChannelGroupCommand.prototype.getChannelGroupName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.cmapi.DeleteChannelGroupCommand.prototype.setChannelGroupName = function(value) {
  jspb.Message.setField(this, 2, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cmapi.FindChannelGroupsCommand = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.cmapi.FindChannelGroupsCommand.repeatedFields_, null);
};
goog.inherits(proto.cmapi.FindChannelGroupsCommand, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.cmapi.FindChannelGroupsCommand.displayName = 'proto.cmapi.FindChannelGroupsCommand';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.cmapi.FindChannelGroupsCommand.repeatedFields_ = [3];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cmapi.FindChannelGroupsCommand.prototype.toObject = function(opt_includeInstance) {
  return proto.cmapi.FindChannelGroupsCommand.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cmapi.FindChannelGroupsCommand} msg The msg instance to transform.
 * @return {!Object}
 */
proto.cmapi.FindChannelGroupsCommand.toObject = function(includeInstance, msg) {
  var f, obj = {
    status: jspb.Message.getFieldWithDefault(msg, 1, 0),
    filter: jspb.Message.getFieldWithDefault(msg, 2, ""),
    channelGroupList: jspb.Message.toObjectList(msg.getChannelGroupList(),
    proto.cmapi.ChannelGroupInfo.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cmapi.FindChannelGroupsCommand}
 */
proto.cmapi.FindChannelGroupsCommand.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cmapi.FindChannelGroupsCommand;
  return proto.cmapi.FindChannelGroupsCommand.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cmapi.FindChannelGroupsCommand} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cmapi.FindChannelGroupsCommand}
 */
proto.cmapi.FindChannelGroupsCommand.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.cmapi.Status} */ (reader.readEnum());
      msg.setStatus(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setFilter(value);
      break;
    case 3:
      var value = new proto.cmapi.ChannelGroupInfo;
      reader.readMessage(value,proto.cmapi.ChannelGroupInfo.deserializeBinaryFromReader);
      msg.addChannelGroup(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.cmapi.FindChannelGroupsCommand} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.cmapi.FindChannelGroupsCommand.serializeBinaryToWriter = function(message, writer) {
  message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cmapi.FindChannelGroupsCommand.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  this.serializeBinaryToWriter(writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.cmapi.FindChannelGroupsCommand.prototype.serializeBinaryToWriter = function (writer) {
  var f = undefined;
  f = this.getStatus();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = this.getFilter();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = this.getChannelGroupList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      3,
      f,
      proto.cmapi.ChannelGroupInfo.serializeBinaryToWriter
    );
  }
};


/**
 * optional Status status = 1;
 * @return {!proto.cmapi.Status}
 */
proto.cmapi.FindChannelGroupsCommand.prototype.getStatus = function() {
  return /** @type {!proto.cmapi.Status} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {!proto.cmapi.Status} value */
proto.cmapi.FindChannelGroupsCommand.prototype.setStatus = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * optional string filter = 2;
 * @return {string}
 */
proto.cmapi.FindChannelGroupsCommand.prototype.getFilter = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.cmapi.FindChannelGroupsCommand.prototype.setFilter = function(value) {
  jspb.Message.setField(this, 2, value);
};


/**
 * repeated ChannelGroupInfo channel_group = 3;
 * If you change this array by adding, removing or replacing elements, or if you
 * replace the array itself, then you must call the setter to update it.
 * @return {!Array.<!proto.cmapi.ChannelGroupInfo>}
 */
proto.cmapi.FindChannelGroupsCommand.prototype.getChannelGroupList = function() {
  return /** @type{!Array.<!proto.cmapi.ChannelGroupInfo>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.cmapi.ChannelGroupInfo, 3));
};


/** @param {!Array.<!proto.cmapi.ChannelGroupInfo>} value */
proto.cmapi.FindChannelGroupsCommand.prototype.setChannelGroupList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 3, value);
};


/**
 * @param {!proto.cmapi.ChannelGroupInfo=} opt_value
 * @param {number=} opt_index
 * @return {!proto.cmapi.ChannelGroupInfo}
 */
proto.cmapi.FindChannelGroupsCommand.prototype.addChannelGroup = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.cmapi.ChannelGroupInfo, opt_index);
};


proto.cmapi.FindChannelGroupsCommand.prototype.clearChannelGroupList = function() {
  this.setChannelGroupList([]);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cmapi.CreateChannelCommand = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cmapi.CreateChannelCommand, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.cmapi.CreateChannelCommand.displayName = 'proto.cmapi.CreateChannelCommand';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cmapi.CreateChannelCommand.prototype.toObject = function(opt_includeInstance) {
  return proto.cmapi.CreateChannelCommand.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cmapi.CreateChannelCommand} msg The msg instance to transform.
 * @return {!Object}
 */
proto.cmapi.CreateChannelCommand.toObject = function(includeInstance, msg) {
  var f, obj = {
    status: jspb.Message.getFieldWithDefault(msg, 1, 0),
    channelName: jspb.Message.getFieldWithDefault(msg, 2, ""),
    type: jspb.Message.getFieldWithDefault(msg, 3, ""),
    visibility: jspb.Message.getFieldWithDefault(msg, 4, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cmapi.CreateChannelCommand}
 */
proto.cmapi.CreateChannelCommand.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cmapi.CreateChannelCommand;
  return proto.cmapi.CreateChannelCommand.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cmapi.CreateChannelCommand} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cmapi.CreateChannelCommand}
 */
proto.cmapi.CreateChannelCommand.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.cmapi.Status} */ (reader.readEnum());
      msg.setStatus(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setChannelName(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setType(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setVisibility(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.cmapi.CreateChannelCommand} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.cmapi.CreateChannelCommand.serializeBinaryToWriter = function(message, writer) {
  message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cmapi.CreateChannelCommand.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  this.serializeBinaryToWriter(writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.cmapi.CreateChannelCommand.prototype.serializeBinaryToWriter = function (writer) {
  var f = undefined;
  f = this.getStatus();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = this.getChannelName();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = this.getType();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = this.getVisibility();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
};


/**
 * optional Status status = 1;
 * @return {!proto.cmapi.Status}
 */
proto.cmapi.CreateChannelCommand.prototype.getStatus = function() {
  return /** @type {!proto.cmapi.Status} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {!proto.cmapi.Status} value */
proto.cmapi.CreateChannelCommand.prototype.setStatus = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * optional string channel_name = 2;
 * @return {string}
 */
proto.cmapi.CreateChannelCommand.prototype.getChannelName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.cmapi.CreateChannelCommand.prototype.setChannelName = function(value) {
  jspb.Message.setField(this, 2, value);
};


/**
 * optional string type = 3;
 * @return {string}
 */
proto.cmapi.CreateChannelCommand.prototype.getType = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/** @param {string} value */
proto.cmapi.CreateChannelCommand.prototype.setType = function(value) {
  jspb.Message.setField(this, 3, value);
};


/**
 * optional string visibility = 4;
 * @return {string}
 */
proto.cmapi.CreateChannelCommand.prototype.getVisibility = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/** @param {string} value */
proto.cmapi.CreateChannelCommand.prototype.setVisibility = function(value) {
  jspb.Message.setField(this, 4, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cmapi.DeleteChannelCommand = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cmapi.DeleteChannelCommand, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.cmapi.DeleteChannelCommand.displayName = 'proto.cmapi.DeleteChannelCommand';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cmapi.DeleteChannelCommand.prototype.toObject = function(opt_includeInstance) {
  return proto.cmapi.DeleteChannelCommand.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cmapi.DeleteChannelCommand} msg The msg instance to transform.
 * @return {!Object}
 */
proto.cmapi.DeleteChannelCommand.toObject = function(includeInstance, msg) {
  var f, obj = {
    status: jspb.Message.getFieldWithDefault(msg, 1, 0),
    channelName: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cmapi.DeleteChannelCommand}
 */
proto.cmapi.DeleteChannelCommand.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cmapi.DeleteChannelCommand;
  return proto.cmapi.DeleteChannelCommand.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cmapi.DeleteChannelCommand} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cmapi.DeleteChannelCommand}
 */
proto.cmapi.DeleteChannelCommand.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.cmapi.Status} */ (reader.readEnum());
      msg.setStatus(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setChannelName(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.cmapi.DeleteChannelCommand} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.cmapi.DeleteChannelCommand.serializeBinaryToWriter = function(message, writer) {
  message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cmapi.DeleteChannelCommand.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  this.serializeBinaryToWriter(writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.cmapi.DeleteChannelCommand.prototype.serializeBinaryToWriter = function (writer) {
  var f = undefined;
  f = this.getStatus();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = this.getChannelName();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional Status status = 1;
 * @return {!proto.cmapi.Status}
 */
proto.cmapi.DeleteChannelCommand.prototype.getStatus = function() {
  return /** @type {!proto.cmapi.Status} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {!proto.cmapi.Status} value */
proto.cmapi.DeleteChannelCommand.prototype.setStatus = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * optional string channel_name = 2;
 * @return {string}
 */
proto.cmapi.DeleteChannelCommand.prototype.getChannelName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.cmapi.DeleteChannelCommand.prototype.setChannelName = function(value) {
  jspb.Message.setField(this, 2, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cmapi.FindChannelsCommand = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.cmapi.FindChannelsCommand.repeatedFields_, null);
};
goog.inherits(proto.cmapi.FindChannelsCommand, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.cmapi.FindChannelsCommand.displayName = 'proto.cmapi.FindChannelsCommand';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.cmapi.FindChannelsCommand.repeatedFields_ = [3];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cmapi.FindChannelsCommand.prototype.toObject = function(opt_includeInstance) {
  return proto.cmapi.FindChannelsCommand.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cmapi.FindChannelsCommand} msg The msg instance to transform.
 * @return {!Object}
 */
proto.cmapi.FindChannelsCommand.toObject = function(includeInstance, msg) {
  var f, obj = {
    status: jspb.Message.getFieldWithDefault(msg, 1, 0),
    filter: jspb.Message.getFieldWithDefault(msg, 2, ""),
    channelList: jspb.Message.toObjectList(msg.getChannelList(),
    proto.cmapi.ChannelInfo.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cmapi.FindChannelsCommand}
 */
proto.cmapi.FindChannelsCommand.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cmapi.FindChannelsCommand;
  return proto.cmapi.FindChannelsCommand.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cmapi.FindChannelsCommand} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cmapi.FindChannelsCommand}
 */
proto.cmapi.FindChannelsCommand.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.cmapi.Status} */ (reader.readEnum());
      msg.setStatus(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setFilter(value);
      break;
    case 3:
      var value = new proto.cmapi.ChannelInfo;
      reader.readMessage(value,proto.cmapi.ChannelInfo.deserializeBinaryFromReader);
      msg.addChannel(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.cmapi.FindChannelsCommand} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.cmapi.FindChannelsCommand.serializeBinaryToWriter = function(message, writer) {
  message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cmapi.FindChannelsCommand.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  this.serializeBinaryToWriter(writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.cmapi.FindChannelsCommand.prototype.serializeBinaryToWriter = function (writer) {
  var f = undefined;
  f = this.getStatus();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = this.getFilter();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = this.getChannelList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      3,
      f,
      proto.cmapi.ChannelInfo.serializeBinaryToWriter
    );
  }
};


/**
 * optional Status status = 1;
 * @return {!proto.cmapi.Status}
 */
proto.cmapi.FindChannelsCommand.prototype.getStatus = function() {
  return /** @type {!proto.cmapi.Status} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {!proto.cmapi.Status} value */
proto.cmapi.FindChannelsCommand.prototype.setStatus = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * optional string filter = 2;
 * @return {string}
 */
proto.cmapi.FindChannelsCommand.prototype.getFilter = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.cmapi.FindChannelsCommand.prototype.setFilter = function(value) {
  jspb.Message.setField(this, 2, value);
};


/**
 * repeated ChannelInfo channel = 3;
 * If you change this array by adding, removing or replacing elements, or if you
 * replace the array itself, then you must call the setter to update it.
 * @return {!Array.<!proto.cmapi.ChannelInfo>}
 */
proto.cmapi.FindChannelsCommand.prototype.getChannelList = function() {
  return /** @type{!Array.<!proto.cmapi.ChannelInfo>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.cmapi.ChannelInfo, 3));
};


/** @param {!Array.<!proto.cmapi.ChannelInfo>} value */
proto.cmapi.FindChannelsCommand.prototype.setChannelList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 3, value);
};


/**
 * @param {!proto.cmapi.ChannelInfo=} opt_value
 * @param {number=} opt_index
 * @return {!proto.cmapi.ChannelInfo}
 */
proto.cmapi.FindChannelsCommand.prototype.addChannel = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.cmapi.ChannelInfo, opt_index);
};


proto.cmapi.FindChannelsCommand.prototype.clearChannelList = function() {
  this.setChannelList([]);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cmapi.ChannelOpenCommand = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cmapi.ChannelOpenCommand, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.cmapi.ChannelOpenCommand.displayName = 'proto.cmapi.ChannelOpenCommand';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cmapi.ChannelOpenCommand.prototype.toObject = function(opt_includeInstance) {
  return proto.cmapi.ChannelOpenCommand.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cmapi.ChannelOpenCommand} msg The msg instance to transform.
 * @return {!Object}
 */
proto.cmapi.ChannelOpenCommand.toObject = function(includeInstance, msg) {
  var f, obj = {
    status: jspb.Message.getFieldWithDefault(msg, 1, 0),
    channelName: jspb.Message.getFieldWithDefault(msg, 2, ""),
    flow: jspb.Message.getFieldWithDefault(msg, 3, ""),
    filter: jspb.Message.getFieldWithDefault(msg, 4, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cmapi.ChannelOpenCommand}
 */
proto.cmapi.ChannelOpenCommand.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cmapi.ChannelOpenCommand;
  return proto.cmapi.ChannelOpenCommand.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cmapi.ChannelOpenCommand} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cmapi.ChannelOpenCommand}
 */
proto.cmapi.ChannelOpenCommand.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.cmapi.Status} */ (reader.readEnum());
      msg.setStatus(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setChannelName(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setFlow(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setFilter(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.cmapi.ChannelOpenCommand} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.cmapi.ChannelOpenCommand.serializeBinaryToWriter = function(message, writer) {
  message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cmapi.ChannelOpenCommand.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  this.serializeBinaryToWriter(writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.cmapi.ChannelOpenCommand.prototype.serializeBinaryToWriter = function (writer) {
  var f = undefined;
  f = this.getStatus();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = this.getChannelName();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = this.getFlow();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = this.getFilter();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
};


/**
 * optional Status status = 1;
 * @return {!proto.cmapi.Status}
 */
proto.cmapi.ChannelOpenCommand.prototype.getStatus = function() {
  return /** @type {!proto.cmapi.Status} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {!proto.cmapi.Status} value */
proto.cmapi.ChannelOpenCommand.prototype.setStatus = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * optional string channel_name = 2;
 * @return {string}
 */
proto.cmapi.ChannelOpenCommand.prototype.getChannelName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.cmapi.ChannelOpenCommand.prototype.setChannelName = function(value) {
  jspb.Message.setField(this, 2, value);
};


/**
 * optional string flow = 3;
 * @return {string}
 */
proto.cmapi.ChannelOpenCommand.prototype.getFlow = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/** @param {string} value */
proto.cmapi.ChannelOpenCommand.prototype.setFlow = function(value) {
  jspb.Message.setField(this, 3, value);
};


/**
 * optional string filter = 4;
 * @return {string}
 */
proto.cmapi.ChannelOpenCommand.prototype.getFilter = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/** @param {string} value */
proto.cmapi.ChannelOpenCommand.prototype.setFilter = function(value) {
  jspb.Message.setField(this, 4, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cmapi.ChannelCloseCommand = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cmapi.ChannelCloseCommand, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.cmapi.ChannelCloseCommand.displayName = 'proto.cmapi.ChannelCloseCommand';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cmapi.ChannelCloseCommand.prototype.toObject = function(opt_includeInstance) {
  return proto.cmapi.ChannelCloseCommand.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cmapi.ChannelCloseCommand} msg The msg instance to transform.
 * @return {!Object}
 */
proto.cmapi.ChannelCloseCommand.toObject = function(includeInstance, msg) {
  var f, obj = {
    status: jspb.Message.getFieldWithDefault(msg, 1, 0),
    channelName: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cmapi.ChannelCloseCommand}
 */
proto.cmapi.ChannelCloseCommand.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cmapi.ChannelCloseCommand;
  return proto.cmapi.ChannelCloseCommand.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cmapi.ChannelCloseCommand} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cmapi.ChannelCloseCommand}
 */
proto.cmapi.ChannelCloseCommand.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.cmapi.Status} */ (reader.readEnum());
      msg.setStatus(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setChannelName(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.cmapi.ChannelCloseCommand} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.cmapi.ChannelCloseCommand.serializeBinaryToWriter = function(message, writer) {
  message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cmapi.ChannelCloseCommand.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  this.serializeBinaryToWriter(writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.cmapi.ChannelCloseCommand.prototype.serializeBinaryToWriter = function (writer) {
  var f = undefined;
  f = this.getStatus();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = this.getChannelName();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional Status status = 1;
 * @return {!proto.cmapi.Status}
 */
proto.cmapi.ChannelCloseCommand.prototype.getStatus = function() {
  return /** @type {!proto.cmapi.Status} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {!proto.cmapi.Status} value */
proto.cmapi.ChannelCloseCommand.prototype.setStatus = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * optional string channel_name = 2;
 * @return {string}
 */
proto.cmapi.ChannelCloseCommand.prototype.getChannelName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.cmapi.ChannelCloseCommand.prototype.setChannelName = function(value) {
  jspb.Message.setField(this, 2, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cmapi.ChannelPublishCommand = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cmapi.ChannelPublishCommand, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.cmapi.ChannelPublishCommand.displayName = 'proto.cmapi.ChannelPublishCommand';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cmapi.ChannelPublishCommand.prototype.toObject = function(opt_includeInstance) {
  return proto.cmapi.ChannelPublishCommand.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cmapi.ChannelPublishCommand} msg The msg instance to transform.
 * @return {!Object}
 */
proto.cmapi.ChannelPublishCommand.toObject = function(includeInstance, msg) {
  var f, obj = {
    status: jspb.Message.getFieldWithDefault(msg, 1, 0),
    channelName: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cmapi.ChannelPublishCommand}
 */
proto.cmapi.ChannelPublishCommand.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cmapi.ChannelPublishCommand;
  return proto.cmapi.ChannelPublishCommand.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cmapi.ChannelPublishCommand} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cmapi.ChannelPublishCommand}
 */
proto.cmapi.ChannelPublishCommand.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.cmapi.Status} */ (reader.readEnum());
      msg.setStatus(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setChannelName(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.cmapi.ChannelPublishCommand} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.cmapi.ChannelPublishCommand.serializeBinaryToWriter = function(message, writer) {
  message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cmapi.ChannelPublishCommand.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  this.serializeBinaryToWriter(writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.cmapi.ChannelPublishCommand.prototype.serializeBinaryToWriter = function (writer) {
  var f = undefined;
  f = this.getStatus();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = this.getChannelName();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional Status status = 1;
 * @return {!proto.cmapi.Status}
 */
proto.cmapi.ChannelPublishCommand.prototype.getStatus = function() {
  return /** @type {!proto.cmapi.Status} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {!proto.cmapi.Status} value */
proto.cmapi.ChannelPublishCommand.prototype.setStatus = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * optional string channel_name = 2;
 * @return {string}
 */
proto.cmapi.ChannelPublishCommand.prototype.getChannelName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.cmapi.ChannelPublishCommand.prototype.setChannelName = function(value) {
  jspb.Message.setField(this, 2, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cmapi.ChannelCacheCommand = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.cmapi.ChannelCacheCommand.repeatedFields_, null);
};
goog.inherits(proto.cmapi.ChannelCacheCommand, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.cmapi.ChannelCacheCommand.displayName = 'proto.cmapi.ChannelCacheCommand';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.cmapi.ChannelCacheCommand.repeatedFields_ = [3];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cmapi.ChannelCacheCommand.prototype.toObject = function(opt_includeInstance) {
  return proto.cmapi.ChannelCacheCommand.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cmapi.ChannelCacheCommand} msg The msg instance to transform.
 * @return {!Object}
 */
proto.cmapi.ChannelCacheCommand.toObject = function(includeInstance, msg) {
  var f, obj = {
    status: jspb.Message.getFieldWithDefault(msg, 1, 0),
    channelName: jspb.Message.getFieldWithDefault(msg, 2, ""),
    entityIdList: jspb.Message.getField(msg, 3)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cmapi.ChannelCacheCommand}
 */
proto.cmapi.ChannelCacheCommand.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cmapi.ChannelCacheCommand;
  return proto.cmapi.ChannelCacheCommand.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cmapi.ChannelCacheCommand} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cmapi.ChannelCacheCommand}
 */
proto.cmapi.ChannelCacheCommand.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.cmapi.Status} */ (reader.readEnum());
      msg.setStatus(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setChannelName(value);
      break;
    case 3:
      var value = /** @type {!Array.<number>} */ (reader.readPackedInt32());
      msg.setEntityIdList(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.cmapi.ChannelCacheCommand} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.cmapi.ChannelCacheCommand.serializeBinaryToWriter = function(message, writer) {
  message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cmapi.ChannelCacheCommand.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  this.serializeBinaryToWriter(writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.cmapi.ChannelCacheCommand.prototype.serializeBinaryToWriter = function (writer) {
  var f = undefined;
  f = this.getStatus();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = this.getChannelName();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = this.getEntityIdList();
  if (f.length > 0) {
    writer.writePackedInt32(
      3,
      f
    );
  }
};


/**
 * optional Status status = 1;
 * @return {!proto.cmapi.Status}
 */
proto.cmapi.ChannelCacheCommand.prototype.getStatus = function() {
  return /** @type {!proto.cmapi.Status} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {!proto.cmapi.Status} value */
proto.cmapi.ChannelCacheCommand.prototype.setStatus = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * optional string channel_name = 2;
 * @return {string}
 */
proto.cmapi.ChannelCacheCommand.prototype.getChannelName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.cmapi.ChannelCacheCommand.prototype.setChannelName = function(value) {
  jspb.Message.setField(this, 2, value);
};


/**
 * repeated int32 entity_id = 3;
 * If you change this array by adding, removing or replacing elements, or if you
 * replace the array itself, then you must call the setter to update it.
 * @return {!Array.<number>}
 */
proto.cmapi.ChannelCacheCommand.prototype.getEntityIdList = function() {
  return /** @type {!Array.<number>} */ (jspb.Message.getField(this, 3));
};


/** @param {!Array.<number>} value */
proto.cmapi.ChannelCacheCommand.prototype.setEntityIdList = function(value) {
  jspb.Message.setField(this, 3, value || []);
};


/**
 * @param {!number} value
 * @param {number=} opt_index
 */
proto.cmapi.ChannelCacheCommand.prototype.addEntityId = function(value, opt_index) {
  jspb.Message.addToRepeatedField(this, 3, value, opt_index);
};


proto.cmapi.ChannelCacheCommand.prototype.clearEntityIdList = function() {
  this.setEntityIdList([]);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cmapi.ChannelHistoryCommand = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cmapi.ChannelHistoryCommand, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.cmapi.ChannelHistoryCommand.displayName = 'proto.cmapi.ChannelHistoryCommand';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cmapi.ChannelHistoryCommand.prototype.toObject = function(opt_includeInstance) {
  return proto.cmapi.ChannelHistoryCommand.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cmapi.ChannelHistoryCommand} msg The msg instance to transform.
 * @return {!Object}
 */
proto.cmapi.ChannelHistoryCommand.toObject = function(includeInstance, msg) {
  var f, obj = {
    status: jspb.Message.getFieldWithDefault(msg, 1, 0),
    channelName: jspb.Message.getFieldWithDefault(msg, 2, ""),
    startTime: jspb.Message.getFieldWithDefault(msg, 3, 0),
    endTime: jspb.Message.getFieldWithDefault(msg, 4, 0),
    history: (f = msg.getHistory()) && proto.cmapi.HistoryInfo.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cmapi.ChannelHistoryCommand}
 */
proto.cmapi.ChannelHistoryCommand.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cmapi.ChannelHistoryCommand;
  return proto.cmapi.ChannelHistoryCommand.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cmapi.ChannelHistoryCommand} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cmapi.ChannelHistoryCommand}
 */
proto.cmapi.ChannelHistoryCommand.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.cmapi.Status} */ (reader.readEnum());
      msg.setStatus(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setChannelName(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setStartTime(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setEndTime(value);
      break;
    case 5:
      var value = new proto.cmapi.HistoryInfo;
      reader.readMessage(value,proto.cmapi.HistoryInfo.deserializeBinaryFromReader);
      msg.setHistory(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.cmapi.ChannelHistoryCommand} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.cmapi.ChannelHistoryCommand.serializeBinaryToWriter = function(message, writer) {
  message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cmapi.ChannelHistoryCommand.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  this.serializeBinaryToWriter(writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.cmapi.ChannelHistoryCommand.prototype.serializeBinaryToWriter = function (writer) {
  var f = undefined;
  f = this.getStatus();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = this.getChannelName();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = this.getStartTime();
  if (f !== 0) {
    writer.writeInt64(
      3,
      f
    );
  }
  f = this.getEndTime();
  if (f !== 0) {
    writer.writeInt64(
      4,
      f
    );
  }
  f = this.getHistory();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      proto.cmapi.HistoryInfo.serializeBinaryToWriter
    );
  }
};


/**
 * optional Status status = 1;
 * @return {!proto.cmapi.Status}
 */
proto.cmapi.ChannelHistoryCommand.prototype.getStatus = function() {
  return /** @type {!proto.cmapi.Status} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {!proto.cmapi.Status} value */
proto.cmapi.ChannelHistoryCommand.prototype.setStatus = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * optional string channel_name = 2;
 * @return {string}
 */
proto.cmapi.ChannelHistoryCommand.prototype.getChannelName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.cmapi.ChannelHistoryCommand.prototype.setChannelName = function(value) {
  jspb.Message.setField(this, 2, value);
};


/**
 * optional int64 start_time = 3;
 * @return {number}
 */
proto.cmapi.ChannelHistoryCommand.prototype.getStartTime = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/** @param {number} value */
proto.cmapi.ChannelHistoryCommand.prototype.setStartTime = function(value) {
  jspb.Message.setField(this, 3, value);
};


/**
 * optional int64 end_time = 4;
 * @return {number}
 */
proto.cmapi.ChannelHistoryCommand.prototype.getEndTime = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/** @param {number} value */
proto.cmapi.ChannelHistoryCommand.prototype.setEndTime = function(value) {
  jspb.Message.setField(this, 4, value);
};


/**
 * optional HistoryInfo history = 5;
 * @return {?proto.cmapi.HistoryInfo}
 */
proto.cmapi.ChannelHistoryCommand.prototype.getHistory = function() {
  return /** @type{?proto.cmapi.HistoryInfo} */ (
    jspb.Message.getWrapperField(this, proto.cmapi.HistoryInfo, 5));
};


/** @param {?proto.cmapi.HistoryInfo|undefined} value */
proto.cmapi.ChannelHistoryCommand.prototype.setHistory = function(value) {
  jspb.Message.setWrapperField(this, 5, value);
};


proto.cmapi.ChannelHistoryCommand.prototype.clearHistory = function() {
  this.setHistory(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.cmapi.ChannelHistoryCommand.prototype.hasHistory = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * @enum {number}
 */
proto.cmapi.SymbolStandard = {
  MIL_STD_2525C: 0,
  MIL_STD_2525B: 1
};

/**
 * @enum {number}
 */
proto.cmapi.AltitudeMode = {
  CLAMP_TO_GROUND: 0,
  RELATIVE_TO_GROUND: 1,
  ABSOLUTE: 2
};

/**
 * @enum {number}
 */
proto.cmapi.Modifier = {
  SYMBOL_ICON: 0,
  ECHELON: 1,
  QUANTITY: 2,
  TASK_FORCE_INDICATOR: 3,
  FRAME_SHAPE_MODIFIER: 4,
  REDUCED_OR_REINFORCED: 5,
  STAFF_COMMENTS: 6,
  ADDITIONAL_INFO_1: 7,
  ADDITIONAL_INFO_2: 8,
  ADDITIONAL_INFO_3: 9,
  EVALUATION_RATING: 10,
  COMBAT_EFFECTIVENESS: 11,
  SIGNATURE_EQUIPMENT: 12,
  HIGHER_FORMATION: 13,
  HOSTILE: 14,
  IFF_SIF: 15,
  DIRECTION_OF_MOVEMENT: 16,
  MOBILITY_INDICATOR: 17,
  SIGINT_MOBILITY_INDICATOR: 18,
  OFFSET_INDICATOR: 19,
  UNIQUE_DESIGNATOR_1: 20,
  UNIQUE_DESIGNATOR_2: 21,
  EQUIPMENT_TYPE: 22,
  DATE_TIME_GROUP: 23,
  DATE_TIME_GROUP_2: 24,
  ALTITUDE_DEPTH: 25,
  LOCATION: 26,
  SPEED: 27,
  SPECIAL_C2_HEADQUARTERS: 28,
  FEINT_DUMMY_INDICATOR: 29,
  INSTALLATION: 30,
  PLATFORM_TYPE: 31,
  EQUIPMENT_TEARDOWN_TIME: 32,
  COMMON_IDENTIFIER: 33,
  AUXILIARY_EQUIPMENT_INDICATOR: 34,
  AREA_OF_UNCERTAINTY: 35,
  DEAD_RECKONING: 36,
  SPEED_LEADER: 37,
  PAIRING_LINE: 38,
  OPERATIONAL_CONDITION: 39,
  DISTANCE: 40,
  AZIMUTH: 41,
  ENGAGEMENT_BAR: 42,
  COUNTRY_CODE: 43,
  SONAR_CLASSIFICATION_CONFIDENCE: 44
};

/**
 * @enum {number}
 */
proto.cmapi.FillPattern = {
  SOLID: 0,
  HATCHED: 1,
  CROSSHATCHED: 2
};

/**
 * @enum {number}
 */
proto.cmapi.Justification = {
  LEFT: 0,
  CENTER: 1,
  RIGHT: 2
};

/**
 * @enum {number}
 */
proto.cmapi.Typeface = {
  REGULAR: 0,
  BOLD: 1,
  ITALIC: 2,
  BOLDITALIC: 3
};

/**
 * @enum {number}
 */
proto.cmapi.Status = {
  SUCCESS: 0,
  FAILURE: 1
};

