buildscript {
    ext {
        version_wildfly_swarm = "2017.2.0"
    }
    
    repositories {
        mavenLocal()
        jcenter()
        mavenCentral()
    }

    dependencies {
        classpath 'com.netflix.nebula:nebula-publishing-plugin:4.9.1'
        classpath "io.spring.gradle:dependency-management-plugin:1.0.0.RELEASE"
        classpath "com.google.protobuf:protobuf-gradle-plugin:0.8.1"
        //classpath "org.wildfly.swarm:wildfly-swarm-plugin:${version_wildfly_swarm}"
    }
}

ext {
    empUsername = System.getenv("CI_USERNAME") ?: empUsername
    empPassword = System.getenv("CI_PASSWORD") ?: empPassword

    version_cmapi  = "0.0.5"
    version_protoc = "3.2.0"
    
    sourceCompatibility = JavaVersion.VERSION_1_7
    targetCompatibility = JavaVersion.VERSION_1_7
}

allprojects {
    group = "org.cmapi.mirrorcache"
    
    apply plugin: 'io.spring.dependency-management'
    
    dependencyManagement {
        imports {
            mavenBom "org.wildfly.swarm:bom-all:${version_wildfly_swarm}"
        }
        
        dependencies {
            dependency ("org.cmapi.primitives:common-map-geospatial-notation:${version_cmapi}")
            
            dependency ("ch.qos.logback:logback-classic:1.1.8")
            
            dependency ("com.google.protobuf:protobuf-java:${version_protoc}")
            dependency ("com.google.protobuf:protobuf-java-util:${version_protoc}")
            
            dependency ("uk.gov.nationalarchives.thirdparty.netbeans:org-netbeans-swing-outline:7.2")
            
            dependency ("io.undertow:undertow-websockets-jsr:1.2.9.Final")
        }
    }
    
    repositories {
        mavenLocal()
        jcenter()
        //mavenCentral()
		
        maven {
            url 'http://repository.jboss.org/nexus/content/groups/public-jboss'
        }
		
		maven {
			url = "https://nexus.di2e.net/nexus/content/repositories/releases/"
			credentials {
				username empUsername
				password empPassword
			}
		}
    }
}


task wrapper(type: Wrapper, description: "Generates gradlew[.bat] scripts") {
    gradleVersion = '3.4.1'
}

if (JavaVersion.current().isJava8Compatible()) { // disable lint for java8
    allprojects {
        tasks.withType(Javadoc) {
            options.addStringOption('Xdoclint:none', '-quiet')
        }
    }
}